2016年12月23日15:22:36
ALTER TABLE `log_visitor` ADD CONSTRAINT UNQ_LOG_VISITOR_SESSION_ID_PRODUCT_ID UNIQUE (`session_id`,`product_id`);

2016年12月28日09:03:31
DROP TABLE `api_rest_attribute`;
CREATE TABLE IF NOT EXISTS `api_rest_attribute` (
    `role_id` INTEGER NOT NULL,
    `resource` VARCHAR(50) NOT NULL,
    `operation` BOOLEAN DEFAULT 0,
    `attributes` TEXT,
    PRIMARY KEY (`role_id`,`resource`,`operation`),
    CONSTRAINT FK_API_REST_ATTR_API_REST_ROLE FOREIGN KEY (`role_id`) REFERENCES `api_rest_role`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

2017年1月10日10:51:12
ALTER TABLE `api_rest_role` ADD `validation` TINYINT DEFAULT 1;
UPDATE `api_rest_role` SET `validation`=-1 WHERE `name`='Admin';
UPDATE `api_rest_role` SET `validation`=0 WHERE `name`='Anonymous';
UPDATE `api_rest_role` SET `validation`=1 WHERE `name`='Customer';
DROP TABLE `api_soap_user`;
CREATE TABLE IF NOT EXISTS `api_soap_user` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
    `role_id` INTEGER UNSIGNED NOT NULL,
    `email` VARCHAR(255) DEFAULT '',
    `username` VARCHAR(255) NOT NULL,
    `password` VARCHAR(255) NOT NULL,
    `public_key` TEXT,
    `private_key` TEXT,
    `phrase` VARCHAR(255) DEFAULT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    INDEX IDX_API_SOAP_USER_ROLE_ID (`role_id`),
    CONSTRAINT UNQ_API_SOAP_USER_USERNAME UNIQUE (`username`),
    CONSTRAINT FK_API_SOAP_USER_ROLE_ID_API_SOAP_ROLE_ID FOREIGN KEY (`role_id`) REFERENCES `api_soap_role`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS `api_soap_session` (
    `session_id` VARCHAR(40) NOT NULL,
    `user_id` INTEGER UNSIGNED NOT NULL,
    `log_date` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (`session_id`),
    INDEX `IDX_API_SOAP_SESSION_USER_ID` (`user_id`),
    CONSTRAINT FK_API_SOAP_SESSION_USER_ID_API_SOAP_USER_ID FOREIGN KEY (`user_id`) REFERENCES `api_soap_user`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

2017年1月13日14:20:25
ALTER TABLE `retailer` DROP FOREIGN KEY FK_RETAILER_CUSTOMER_ID_CUSTOMER_ENTITY_ID;
ALTER TABLE `retailer` DROP INDEX UNQ_RETAILER_CUSTOMER_ID;
CREATE TABLE IF NOT EXISTS `retailer_manager`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
    `customer_id` INTEGER UNSIGNED NOT NULL,
    `retailer_id` INTEGER UNSIGNED NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    INDEX IDX_RETAILER_MANAGER_RETAILER_ID (`retailer_id`),
    CONSTRAINT UNQ_RETAILER_MANAGER_CUSTOMER_ID UNIQUE (`customer_id`),
    CONSTRAINT FK_RETAILER_MANAGER_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_RETAILER_MANAGER_RETAILER_ID_RETAILER_ID FOREIGN KEY (`retailer_id`) REFERENCES `retailer` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);
INSERT INTO `retailer_manager`(`customer_id`,`retailer_id`) SELECT `customer_id`,`id` FROM `retailer`;
ALTER TABLE `retailer` DROP COLUMN `customer_id`;

2017年1月17日9:02:30
DROP TABLE `customer_balance`;
CREATE TABLE IF NOT EXISTS `customer_balance`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
    `customer_id` INTEGER UNSIGNED NOT NULL,
    `order_id` INTEGER UNSIGNED DEFAULT NULL,
    `amount` DECIMAL(12,4) NOT NULL,
    `comment` TEXT,
    `status` BOOLEAN DEFAULT 1 NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (`id`),
    INDEX IDX_CUSTOMER_BALANCE_CUSTOMER_ID (`customer_id`),
    INDEX IDX_CUSTOMER_BALANCE_ORDER_ID (`order_id`),
    CONSTRAINT FK_CUSTOMER_BALANCE_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CUSTOMER_BALANCE_ORDER_ID_SALES_ORDER_ID FOREIGN KEY (`order_id`) REFERENCES `sales_order` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `livechat_record` (
    `session_id` VARCHAR(255) NOT NULL,
    `sender` VARCHAR(255) NOT NULL,
    `type` VARCHAR(50) NOT NULL,
    `message` BLOB,
    `partial` INTEGER DEFAULT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE `oauth_consumer` ADD `public_key` TEXT;
ALTER TABLE `oauth_consumer` ADD `private_key` TEXT;
ALTER TABLE `oauth_consumer` ADD `phrase` VARCHAR(255) DEFAULT NULL;

2017年1月19日8:56:20
DROP TABLE IF EXISTS `livechat_session`;
DROP TABLE IF EXISTS `livechat_group_member`;
DROP TABLE IF EXISTS `livechat_group`;
CREATE TABLE IF NOT EXISTS `livechat_session` (
    `id` VARCHAR(255) NOT NULL,
    `customer_id` INTEGER UNSIGNED NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(`id`,`customer_id`),
    CONSTRAINT FK_LIVECHAT_SESSION_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS `livechat_group` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT,
    `name` VARCHAR(255) NOT NULL,
    `session_id` VARCHAR(255) DEFAULT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(`id`),
    CONSTRAINT UNQ_LIVECHAT_GROUP_SESSION_ID UNIQUE (`session_id`),
    CONSTRAINT FK_LIVECHAT_GROUP_SESSION_ID_LIVECHAT_SESSION_ID FOREIGN KEY (`session_id`) REFERENCES `livechat_session` (`id`) ON DELETE SET NULL ON UPDATE CASCADE
);
CREATE TABLE IF NOT EXISTS `livechat_group_member`(
    `group_id` INTEGER UNSIGNED UNSIGNED NOT NULL,
    `customer_id` INTEGER UNSIGNED NOT NULL,
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY(`group_id`,`customer_id`),
    CONSTRAINT FK_LIVECHAT_GROUP_MEMBER_GROUP_ID_LIVECHAT_GROUP_ID FOREIGN KEY (`group_id`) REFERENCES `livechat_group` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_LIVECHAT_GROUP_MEMBER_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

2017年2月15日17:45:00
CREATE TABLE IF NOT EXISTS `product_search_term` (
    `term` VARCHAR(255) NOT NULL,
    `synonym` VARCHAR(255) DEFAULT NULL,
    `count` INTEGER UNSIGNED DEFAULT 0,
    `popularity` INTEGER UNSIGNED DEFAULT 1,
    `store_id` INTEGER UNSIGNED DEFAULT NULL,
    `category_id` INTEGER UNSIGNED DEFAULT NULL,
    `status` BOOLEAN DEFAULT 1,
    `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY(`term`),
    INDEX IDX_PRODUCT_SEARCH_TERM_SYNONYM (`synonym`),
    INDEX IDX_PRODUCT_SEARCH_TERM_STORE_ID (`store_id`),
    INDEX IDX_PRODUCT_SEARCH_TERM_CATEGORY_ID (`category_id`),
    CONSTRAINT FK_PRODUCT_SEARCH_TERM_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store` (`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_SEARCH_TERM_STORE_ID_CORE_CATEGORY_ID FOREIGN KEY (`category_id`) REFERENCES `category_entity` (`id`) ON DELETE SET NULL ON UPDATE CASCADE
);
2017年2月17日09:13:01
CREATE TABLE IF NOT EXISTS `core_increment` (
    `type` VARCHAR(50) NOT NULL,
    `store_id` INTEGER UNSIGNED NOT NULL,
    `prefix` VARCHAR(255) NOT NULL,
    `last_id` INTEGER UNSIGNED NOT NULL DEFAULT 0,
    `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY(`type`,`store_id`),
    INDEX IDX_CORE_INCREMENT_STORE_ID (`store_id`),
    CONSTRAINT FK_CORE_INCREMENT_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);
