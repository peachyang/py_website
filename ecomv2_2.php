SET FOREIGN_KEY_CHECKS=0;

CREATE TABLE IF NOT EXISTS `sales_order_phase` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Phase ID',
    `code` VARCHAR(20) NOT NULL COMMENT 'Phase code',
    `name` VARCHAR(20) DEFAULT '' COMMENT 'Phase name',
    PRIMARY KEY (`id`),
    CONSTRAINT UNQ_SALES_ORDER_PHASE_CODE UNIQUE (`code`)
);

CREATE TABLE IF NOT EXISTS `sales_order_status` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Status ID',
    `phase_id` INTEGER UNSIGNED NOT NULL COMMENT 'Phase ID',
    `name` VARCHAR(20) DEFAULT '' COMMENT 'Status name',
    `is_default` BOOLEAN DEFAULT 1 COMMENT 'Is default',
    PRIMARY KEY (`id`),
    INDEX IDX_SALES_ORDER_STATUS_PHASE_ID (`phase_id`),
    CONSTRAINT FK_SALES_ORDER_STATUS_PHASE_ID_SALES_ORDER_PHASE_ID FOREIGN KEY (`phase_id`) REFERENCES `sales_order_phase`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO `sales_order_phase` VALUES 
(1,'pending','Pending'),
(2,'pending_payment','Pending Payment'),
(3,'processing','Processing'),
(4,'complete','Complete'),
(5,'canceled','Canceled'),
(6,'closed','Close'),
(7,'holded','On Hold');

INSERT INTO `sales_order_status` VALUES 
(1,1,'Pending',1),
(2,2,'Pending Payment',1),
(3,3,'Processing',1),
(4,4,'Complete',1),
(5,5,'Canceled',1),
(6,6,'Close',1),
(7,7,'On Hold',1);

CREATE TABLE IF NOT EXISTS `sales_cart` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Order ID',
    `customer_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Customer ID',
    `billing_address_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Billing address ID',
    `shipping_address_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Shipping address ID',
    `billing_address` TEXT COMMENT 'Billing address',
    `shipping_address` TEXT COMMENT 'Billing address',
    `is_virtual` BOOLEAN DEFAULT 0 COMMENT 'Is order virtual',
    `free_shipping` BOOLEAN DEFAULT 0 COMMENT 'Is order shipping free',
    `coupon` VARCHAR(255) DEFAULT NULL COMMENT 'Coupon',
    `base_currency` CHAR(3) NOT NULL COMMENT 'Base currency code',
    `currency` CHAR(3) NOT NULL COMMENT 'Currency code',
    `shipping_method` VARCHAR(255) DEFAULT NULL COMMENT 'Shipping method',
    `payment_method` VARCHAR(255) DEFAULT NULL COMMENT 'Payment method',
    `base_subtotal` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base subtotal',
    `subtotal` DECIMAL(12,4) DEFAULT 0 COMMENT 'Subtotal',
    `base_shipping` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base shipping fee',
    `shipping` DECIMAL(12,4) DEFAULT 0 COMMENT 'Shipping fee',
    `base_discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base discount',
    `discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Discount',
    `discount_detail` VARCHAR(255) DEFAULT NULL COMMENT 'Discount detail',
    `base_tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base tax',
    `tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Tax',
    `base_total` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base total',
    `total` DECIMAL(12,4) DEFAULT 0 COMMENT 'Total',
    `additional` TEXT COMMENT 'Additional info',
    `customer_note` TEXT COMMENT 'Customer note',
    `status` BOOLEAN DEFAULT 1 COMMENT 'Is active',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated at',
    PRIMARY KEY (`id`),
    INDEX IDX_SALES_CART_STATUS (`status`),
    INDEX IDX_SALES_CART_CUSTOMER_ID (`customer_id`),
    INDEX IDX_SALES_CART_BILLING_ADDRESS_ID (`billing_address_id`),
    INDEX IDX_SALES_CART_SHIPPING_ADDRESS_ID (`shipping_address_id`),
    CONSTRAINT FK_SALES_CART_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_CART_BILLING_ADDR_ID_ADDR_ENTITY_ID FOREIGN KEY (`billing_address_id`) REFERENCES `address_entity`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_CART_SHIPPING_ADDR_ID_ADDR_ENTITY_ID FOREIGN KEY (`shipping_address_id`) REFERENCES `address_entity`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `sales_cart_item` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Order item ID',
    `cart_id` INTEGER UNSIGNED NOT NULL COMMENT 'Cart ID',
    `store_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Store ID',
    `warehouse_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Warehouse ID',
    `product_id` INTEGER UNSIGNED COMMENT 'Product ID',
    `product_name` VARCHAR(255) COMMENT 'Product Name',
    `options` VARCHAR(255) NULL COMMENT 'Options',
    `qty` DECIMAL(12,4) NOT NULL COMMENT 'Quentity',
    `sku` VARCHAR(255) NOT NULL COMMENT 'Sku',
    `is_virtual` BOOLEAN DEFAULT 0 COMMENT 'Is item virtual',
    `free_shipping` BOOLEAN DEFAULT 0 COMMENT 'Is item shipping free',
    `base_price` DECIMAL(12,4) NOT NULL COMMENT 'Base price',
    `price` DECIMAL(12,4) NOT NULL COMMENT 'Price',
    `base_discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base discount',
    `discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Discount',
    `base_tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base tax',
    `tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Tax',
    `base_total` DECIMAL(12,4) NOT NULL COMMENT 'Base total',
    `total` DECIMAL(12,4) NOT NULL COMMENT 'Total',
    `weight` DECIMAL(12,4) NOT NULL COMMENT 'Total weight',
    `status` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Is active',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated at',
    PRIMARY KEY (`id`),
    INDEX IDX_SALES_CART_ITEM_WAREHOUSE_ID (`warehouse_id`),
    INDEX IDX_SALES_CART_ITEM_STORE_ID (`store_id`),
    INDEX IDX_SALES_CART_ITEM_CART_ID (`cart_id`),
    INDEX IDX_SALES_CART_ITEM_PRODUCT_ID (`product_id`),
    INDEX IDX_SALES_CART_ITEM_STATUS (`status`),
    CONSTRAINT FK_SALES_CART_ITEM_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_CART_ITEM_WAREHOUSE_ID_WAREHOUSE_ID FOREIGN KEY (`warehouse_id`) REFERENCES `warehouse`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_CART_ITEM_ORDER_ID_SALES_CART_ID FOREIGN KEY (`cart_id`) REFERENCES `sales_cart`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_CART_ITEM_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`product_id`) REFERENCES `product_entity`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `sales_order` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Order ID',
    `status_id` INTEGER UNSIGNED NOT NULL COMMENT 'Status ID',
    `increment_id` VARCHAR(255) NOT NULL COMMENT 'Increment ID',
    `customer_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Customer ID',
    `billing_address_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Billing address ID',
    `shipping_address_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Shipping address ID',
    `warehouse_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Warehouse ID',
    `store_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Store ID',
    `language_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Language ID',
    `billing_address` TEXT COMMENT 'Billing address',
    `shipping_address` TEXT COMMENT 'Billing address',
    `is_virtual` BOOLEAN DEFAULT 0 COMMENT 'Is order virtual',
    `free_shipping` BOOLEAN DEFAULT 0 COMMENT 'Is order shipping free',
    `coupon` VARCHAR(50) DEFAULT NULL COMMENT 'Coupon',
    `base_currency` CHAR(3) NOT NULL COMMENT 'Base currency code',
    `currency` CHAR(3) NOT NULL COMMENT 'Currency code',
    `shipping_method` VARCHAR(255) DEFAULT NULL COMMENT 'Shipping method',
    `payment_method` VARCHAR(255) DEFAULT NULL COMMENT 'Payment method',
    `base_subtotal` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base subtotal',
    `subtotal` DECIMAL(12,4) DEFAULT 0 COMMENT 'Subtotal',
    `base_shipping` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base shipping fee',
    `shipping` DECIMAL(12,4) DEFAULT 0 COMMENT 'Shipping fee',
    `base_discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base discount',
    `discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Discount',
    `discount_detail` VARCHAR(255) DEFAULT NULL COMMENT 'Discount detail',
    `base_tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base tax',
    `tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Tax',
    `base_total` DECIMAL(12,4) NOT NULL COMMENT 'Base total',
    `total` DECIMAL(12,4) NOT NULL COMMENT 'Total',
    `base_total_paid` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base paid total',
    `total_paid` DECIMAL(12,4) DEFAULT 0 COMMENT 'Paid total',
    `base_total_refunded` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base refunded total',
    `total_refunded` DECIMAL(12,4) DEFAULT 0 COMMENT 'Refunded total',
    `additional` TEXT COMMENT 'Additional info',
    `customer_note` TEXT COMMENT 'Customer note',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated at',
    PRIMARY KEY (`id`),
    INDEX IDX_SALES_ORDER_STATUS_ID (`status_id`),
    INDEX IDX_SALES_ORDER_INCREMENT_ID (`increment_id`),
    INDEX IDX_SALES_ORDER_CUSTOMER_ID (`customer_id`),
    INDEX IDX_SALES_ORDER_STORE_ID (`store_id`),
    INDEX IDX_SALES_ORDER_LANGUAGE_ID (`language_id`),
    INDEX IDX_SALES_ORDER_WAREHOUSE_ID (`warehouse_id`),
    INDEX IDX_SALES_ORDER_BILLING_ADDRESS_ID (`billing_address_id`),
    INDEX IDX_SALES_ORDER_SHIPPING_ADDRESS_ID (`shipping_address_id`),
    CONSTRAINT FK_SALES_ORDER_STATUS_ID_SALES_ORDER_STATUS_ID FOREIGN KEY (`status_id`) REFERENCES `sales_order_status`(`id`) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_WAREHOUSE_ID_WAREHOUSE_ID FOREIGN KEY (`warehouse_id`) REFERENCES `warehouse`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_STORE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_BILLING_ADDR_ID_ADDR_ENTITY_ID FOREIGN KEY (`billing_address_id`) REFERENCES `address_entity`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_SHIPPING_ADDR_ID_ADDR_ENTITY_ID FOREIGN KEY (`shipping_address_id`) REFERENCES `address_entity`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `sales_order_item` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Order item ID',
    `order_id` INTEGER UNSIGNED NOT NULL COMMENT 'Order ID',
    `product_id` INTEGER UNSIGNED COMMENT 'Product ID',
    `product_name` VARCHAR(255) COMMENT 'Product Name',
    `options` VARCHAR(255) NULL COMMENT 'Options',
    `qty` DECIMAL(12,4) NOT NULL COMMENT 'Quentity',
    `sku` VARCHAR(255) NOT NULL COMMENT 'Sku',
    `is_virtual` BOOLEAN DEFAULT 0 COMMENT 'Is item virtual',
    `free_shipping` BOOLEAN DEFAULT 0 COMMENT 'Is item shipping free',
    `base_price` DECIMAL(12,4) NOT NULL COMMENT 'Base price',
    `price` DECIMAL(12,4) NOT NULL COMMENT 'Price',
    `base_discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base discount',
    `discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Discount',
    `base_tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base tax',
    `tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Tax',
    `base_total` DECIMAL(12,4) NOT NULL COMMENT 'Base total',
    `total` DECIMAL(12,4) NOT NULL COMMENT 'Total',
    `weight` DECIMAL(12,4) NOT NULL COMMENT 'Total weight',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated at',
    PRIMARY KEY (`id`),
    INDEX IDX_SALES_ORDER_ITEM_ORDER_ID (`order_id`),
    INDEX IDX_SALES_ORDER_ITEM_PRODUCT_ID (`product_id`),
    CONSTRAINT FK_SALES_ORDER_ITEM_ORDER_ID_SALES_ORDER_ID FOREIGN KEY (`order_id`) REFERENCES `sales_order`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_ITEM_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`product_id`) REFERENCES `product_entity`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `sales_order_invoice` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Invoice ID',
    `order_id` INTEGER UNSIGNED NOT NULL COMMENT 'Order ID',
    `increment_id` VARCHAR(255) NOT NULL COMMENT 'Increment ID',
    `store_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Store ID',
    `coupon` VARCHAR(50) DEFAULT NULL COMMENT 'Coupon',
    `base_currency` CHAR(3) NOT NULL COMMENT 'Base currency code',
    `currency` CHAR(3) NOT NULL COMMENT 'Currency code',
    `base_subtotal` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base subtotal',
    `subtotal` DECIMAL(12,4) DEFAULT 0 COMMENT 'Subtotal',
    `base_shipping` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base shipping fee',
    `shipping` DECIMAL(12,4) DEFAULT 0 COMMENT 'Shipping fee',
    `base_discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base discount',
    `discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Discount',
    `discount_detail` VARCHAR(255) DEFAULT NULL COMMENT 'Discount detail',
    `base_tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base tax',
    `tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Tax',
    `base_total` DECIMAL(12,4) NOT NULL COMMENT 'Base total',
    `total` DECIMAL(12,4) NOT NULL COMMENT 'Total',
    `comment` TEXT COMMENT 'Comment',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated at',
    PRIMARY KEY (`id`),
    INDEX IDX_SALES_ORDER_INVOICE_INCREMENT_ID (`increment_id`),
    INDEX IDX_SALES_ORDER_INVOICE_STORE_ID (`store_id`),
    INDEX IDX_SALES_ORDER_INVOICE_ORDER_ID (`order_id`),
    CONSTRAINT FK_SALES_ORDER_INVOICE_ORDER_ID_SALES_ORDER_ID FOREIGN KEY (`order_id`) REFERENCES `sales_order`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_INVOICE_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `sales_order_invoice_item` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Item ID',
    `item_id` INTEGER UNSIGNED COMMENT 'Order item ID',
    `invoice_id` INTEGER UNSIGNED NOT NULL COMMENT 'Invoice ID',
    `product_id` INTEGER UNSIGNED COMMENT 'Product ID',
    `product_name` VARCHAR(255) COMMENT 'Product Name',
    `options` VARCHAR(255) NULL COMMENT 'Options',
    `qty` DECIMAL(12,4) NOT NULL COMMENT 'Quentity',
    `sku` VARCHAR(255) NOT NULL COMMENT 'Sku',
    `base_price` DECIMAL(12,4) NOT NULL COMMENT 'Base price',
    `price` DECIMAL(12,4) NOT NULL COMMENT 'Price',
    `base_discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base discount',
    `discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Discount',
    `base_tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base tax',
    `tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Tax',
    `base_total` DECIMAL(12,4) NOT NULL COMMENT 'Base total',
    `total` DECIMAL(12,4) NOT NULL COMMENT 'Total',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated at',
    PRIMARY KEY (`id`),
    INDEX IDX_SALES_ORDER_INVOICE_ITEM_ITEM_ID (`item_id`),
    INDEX IDX_SALES_ORDER_INVOICE_ITEM_INVOICE_ID (`invoice_id`),
    INDEX IDX_SALES_ORDER_INVOICE_ITEM_PRODUCT_ID (`product_id`),
    CONSTRAINT FK_SALES_ORDER_INVOICE_ITEM_ITEM_ID_SALES_ORDER_ITEM_ID FOREIGN KEY (`item_id`) REFERENCES `sales_order_item`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_INVOICE_ITEM_INVOICE_ID_SALES_ORDER_INVOICE_ID FOREIGN KEY (`invoice_id`) REFERENCES `sales_order_invoice`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_INVOICE_ITEM_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`product_id`) REFERENCES `product_entity`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `sales_order_shipment` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Shipment ID',
    `order_id` INTEGER UNSIGNED NOT NULL COMMENT 'Order ID',
    `increment_id` VARCHAR(255) NOT NULL COMMENT 'Increment ID',
    `customer_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Customer ID',
    `shipping_method` VARCHAR(255) DEFAULT NULL COMMENT 'Shipping method',
    `billing_address_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Billing address ID',
    `shipping_address_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Shipping address ID',
    `warehouse_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Warehouse ID',
    `store_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Store ID',
    `billing_address` TEXT COMMENT 'Billing address',
    `shipping_address` TEXT COMMENT 'Shipping address',
    `comment` TEXT COMMENT 'Comment',
    `status` BOOLEAN DEFAULT 0 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated at',
    PRIMARY KEY (`id`),
    INDEX IDX_SALES_ORDER_SHIPMENT_INCREMENT_ID (`increment_id`),
    INDEX IDX_SALES_ORDER_SHIPMENT_STORE_ID (`store_id`),
    INDEX IDX_SALES_ORDER_SHIPMENT_ORDER_ID (`order_id`),
    INDEX IDX_SALES_ORDER_SHIPMENT_CUSTOMER_ID (`customer_id`),
    INDEX IDX_SALES_ORDER_SHIPMENT_WAREHOUSE_ID (`warehouse_id`),
    INDEX IDX_SALES_ORDER_SHIPMENT_BILLING_ADDRESS_ID (`billing_address_id`),
    INDEX IDX_SALES_ORDER_SHIPMENT_SHIPPING_ADDRESS_ID (`shipping_address_id`),
    CONSTRAINT FK_SALES_ORDER_SHIPMENT_WAREHOUSE_ID_WAREHOUSE_ID FOREIGN KEY (`warehouse_id`) REFERENCES `warehouse`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_SHIPMENT_ORDER_ID_SALES_ORDER_ID FOREIGN KEY (`order_id`) REFERENCES `sales_order`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_SHIPMENT_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_SHIPMENT_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_SHIPMENT_BILLING_ADDR_ID_ADDR_ENTITY_ID FOREIGN KEY (`billing_address_id`) REFERENCES `address_entity`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_SHIPMENT_SHIPPING_ADDR_ID_ADDR_ENTITY_ID FOREIGN KEY (`shipping_address_id`) REFERENCES `address_entity`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `sales_order_shipment_item` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Item ID',
    `item_id` INTEGER UNSIGNED COMMENT 'Order item ID',
    `shipment_id` INTEGER UNSIGNED NOT NULL COMMENT 'Shipment ID',
    `product_id` INTEGER UNSIGNED COMMENT 'Product ID',
    `product_name` VARCHAR(255) COMMENT 'Product Name',
    `options` VARCHAR(255) NULL COMMENT 'Options',
    `qty` DECIMAL(12,4) NOT NULL COMMENT 'Quentity',
    `sku` VARCHAR(255) NOT NULL COMMENT 'Sku',
    `weight` DECIMAL(12,4) NOT NULL COMMENT 'Weight',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated at',
    PRIMARY KEY (`id`),
    INDEX IDX_SALES_ORDER_SHIPMENT_ITEM_ITEM_ID (`item_id`),
    INDEX IDX_SALES_ORDER_SHIPMENT_ITEM_SHIPMENT_ID (`shipment_id`),
    INDEX IDX_SALES_ORDER_SHIPMENT_ITEM_PRODUCT_ID (`product_id`),
    CONSTRAINT FK_SALES_ORDER_SHIPMENT_ITEM_ITEM_ID_SALES_ORDER_ITEM_ID FOREIGN KEY (`item_id`) REFERENCES `sales_order_item`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_SHIPMENT_ITEM_SHIPMENT_ID_SALES_ORDER_SHIPMENT_ID FOREIGN KEY (`shipment_id`) REFERENCES `sales_order_shipment`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_SHIPMENT_ITEM_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`product_id`) REFERENCES `product_entity`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `sales_order_shipment_track` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Track ID',
    `shipment_id` INTEGER UNSIGNED NOT NULL COMMENT 'Shipment ID',
    `order_id` INTEGER UNSIGNED NOT NULL COMMENT 'Order ID',
    `carrier` VARCHAR(255) NOT NULL COMMENT 'Carrier',
    `carrier_code` VARCHAR(32) DEFAULT '' COMMENT 'Carrier code',
    `track_number` VARCHAR(255) NOT NULL COMMENT 'Track number',
    `description` TEXT COMMENT 'Description',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    PRIMARY KEY (`id`),
    INDEX IDX_SALES_ORDER_TRACK_ORDER_ID (`order_id`),
    INDEX IDX_SALES_ORDER_TRACK_SHIPMENT_ID (`shipment_id`),
    CONSTRAINT FK_SALES_ORDER_TRACK_ORDER_ID_SALES_ORDER_ID FOREIGN KEY (`order_id`) REFERENCES `sales_order`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_TRACK_SHIPMENT_ID_SALES_ORDER_SHIPMENT_ID FOREIGN KEY (`shipment_id`) REFERENCES `sales_order_shipment`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `sales_order_creditmemo` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Credit memo ID',
    `order_id` INTEGER UNSIGNED NOT NULL COMMENT 'Order ID',
    `increment_id` VARCHAR(255) NOT NULL COMMENT 'Increment ID',
    `warehouse_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Warehouse ID',
    `store_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Store ID',
    `base_currency` CHAR(3) NOT NULL COMMENT 'Base currency code',
    `currency` CHAR(3) NOT NULL COMMENT 'Currency code',
    `base_subtotal` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base subtotal',
    `subtotal` DECIMAL(12,4) DEFAULT 0 COMMENT 'Subtotal',
    `base_shipping` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base shipping fee',
    `shipping` DECIMAL(12,4) DEFAULT 0 COMMENT 'Shipping fee',
    `base_discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base discount',
    `discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Discount',
    `base_tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base tax',
    `tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Tax',
    `base_total` DECIMAL(12,4) NOT NULL COMMENT 'Base total',
    `total` DECIMAL(12,4) NOT NULL COMMENT 'Total',
    `comment` TEXT COMMENT 'Comment',
    `status` BOOLEAN DEFAULT 0 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated at',
    PRIMARY KEY (`id`),
    INDEX IDX_SALES_ORDER_MEMO_INCREMENT_ID (`increment_id`),
    INDEX IDX_SALES_ORDER_MEMO_STORE_ID (`store_id`),
    INDEX IDX_SALES_ORDER_MEMO_ORDER_ID (`order_id`),
    INDEX IDX_SALES_ORDER_MEMO_WAREHOUSE_ID (`warehouse_id`),
    CONSTRAINT FK_SALES_ORDER_MEMO_WAREHOUSE_ID_WAREHOUSE_ID FOREIGN KEY (`warehouse_id`) REFERENCES `warehouse`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_MEMO_ORDER_ID_SALES_ORDER_ID FOREIGN KEY (`order_id`) REFERENCES `sales_order`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_MEMO_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `sales_order_creditmemo_item` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Item ID',
    `item_id` INTEGER UNSIGNED COMMENT 'Order item ID',
    `creditmemo_id` INTEGER UNSIGNED NOT NULL COMMENT 'Credit memo ID',
    `product_id` INTEGER UNSIGNED COMMENT 'Product ID',
    `product_name` VARCHAR(255) COMMENT 'Product Name',
    `options` VARCHAR(255) NULL COMMENT 'Options',
    `qty` DECIMAL(12,4) NOT NULL COMMENT 'Quentity',
    `sku` VARCHAR(255) NOT NULL COMMENT 'Sku',
    `base_price` DECIMAL(12,4) NOT NULL COMMENT 'Base price',
    `price` DECIMAL(12,4) NOT NULL COMMENT 'Price',
    `base_discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base discount',
    `discount` DECIMAL(12,4) DEFAULT 0 COMMENT 'Discount',
    `base_tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Base tax',
    `tax` DECIMAL(12,4) DEFAULT 0 COMMENT 'Tax',
    `base_total` DECIMAL(12,4) NOT NULL COMMENT 'Base total',
    `total` DECIMAL(12,4) NOT NULL COMMENT 'Total',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated at',
    PRIMARY KEY (`id`),
    INDEX IDX_SALES_ORDER_MEMO_ITEM_ITEM_ID (`item_id`),
    INDEX IDX_SALES_ORDER_MEMO_ITEM_MEMO_ID (`creditmemo_id`),
    INDEX IDX_SALES_ORDER_MEMO_ITEM_PRODUCT_ID (`product_id`),
    CONSTRAINT FK_SALES_ORDER_MEMO_ITEM_ITEM_ID_SALES_ORDER_ITEM_ID FOREIGN KEY (`item_id`) REFERENCES `sales_order_item`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_MEMO_ITEM_MEMO_ID_SALES_ORDER_MEMO_ID FOREIGN KEY (`creditmemo_id`) REFERENCES `sales_order_creditmemo`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_MEMO_ITEM_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`product_id`) REFERENCES `product_entity`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `sales_order_status_history` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'History ID',
    `admin_id` INTEGER UNSIGNED COMMENT 'Admin ID',
    `order_id` INTEGER UNSIGNED NOT NULL COMMENT 'Order ID',
    `status_id` INTEGER UNSIGNED COMMENT 'Status ID',
    `status` VARCHAR(255) COMMENT 'Status',
    `is_customer_notified` BOOLEAN DEFAULT 0 COMMENT 'Is Customer Notified',
    `is_visible_on_front` BOOLEAN  DEFAULT 0 COMMENT 'Is Visible On Front',
    `comment` TEXT COMMENT 'Comment',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    PRIMARY KEY (`id`),
    INDEX IDX_SALES_ORDER_STATUS_HISTORY_ADMIN_ID (`admin_id`),
    INDEX IDX_SALES_ORDER_STATUS_HISTORY_ORDER_ID (`order_id`),
    INDEX IDX_SALES_ORDER_STATUS_HISTORY_STATUS_ID (`status_id`),
    INDEX IDX_SALES_ORDER_STATUS_HISTORY_CREATED_AT (`created_at`),
    CONSTRAINT FK_SALES_ORDER_STATUS_ADMIN_ID_ADMIN_USER_ID FOREIGN KEY (`admin_id`) REFERENCES `admin_user`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_STATUS_ORDER_ID_SALES_ORDER_ID FOREIGN KEY (`order_id`) REFERENCES `sales_order`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_SALES_ORDER_STATUS_STATUS_ID_SALES_ORDER_STATUS_ID FOREIGN KEY (`status_id`) REFERENCES `sales_order_status`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `wishlist` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Wishlist ID',
    `customer_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer ID',
    PRIMARY KEY (`id`),
    CONSTRAINT UNQ_WISHLIST_CUSTOMER_ID UNIQUE (`customer_id`),
    CONSTRAINT FK_WISHLIST_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `wishlist_item` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Wishlist item ID',
    `wishlist_id` INTEGER UNSIGNED NOT NULL COMMENT 'Wishlist ID',
    `product_id` INTEGER UNSIGNED COMMENT 'Product ID',
    `warehouse_id` INTEGER UNSIGNED COMMENT 'Warehouse ID',
    `product_name` VARCHAR(255) COMMENT 'Product Name',
    `store_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Store ID',
    `description` TEXT COMMENT 'Description',
    `qty` DECIMAL(12,4) NOT NULL COMMENT 'Quentity',
    `options` VARCHAR(255) NULL COMMENT 'Options',
    `price` DECIMAL(12,4) DEFAULT 0 COMMENT 'Price',
    `added_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Added at',
    PRIMARY KEY (`id`),
    INDEX IDX_WISHLIST_ITEM_STORE_ID (`store_id`),
    INDEX IDX_WISHLIST_ITEM_PRODUCT_ID (`product_id`),
    INDEX IDX_WISHLIST_ITEM_WAREHOUSE_ID (`warehouse_id`),
    CONSTRAINT FK_WISHLIST_ITEM_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`product_id`) REFERENCES `product_entity`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_WISHLIST_ITEM_PRODUCT_ID_WAREHOUSE_ID FOREIGN KEY (`warehouse_id`) REFERENCES `warehouse`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_WISHLIST_ITEM_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `social_media` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Social Media ID',
    `label` VARCHAR(255) NOT NULL COMMENT 'Social Media Name',
    `link` VARCHAR(255) NOT NULL COMMENT 'Social Media Link',
    `icon` VARCHAR(20) NOT NULL COMMENT 'Social Media Icon Name',
    PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `social_media_share` (
    `media_id` INTEGER UNSIGNED NOT NULL COMMENT 'Social Media ID',
    `customer_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer ID',
    `product_id` INTEGER UNSIGNED NOT NULL COMMENT 'Product ID',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    PRIMARY KEY (`media_id`,`customer_id`,`product_id`),
    INDEX IDX_SOCIAL_MEDIA_SHARE_CUSTOMER_ID (`customer_id`),
    INDEX IDX_SOCIAL_MEDIA_SHARE_PRODUCT_ID (`product_id`),
    CONSTRAINT FK_SOCIAL_MEDIA_SHARE_MEDIA_ID_SOCIAL_MEDIA_ID FOREIGN KEY (`media_id`) REFERENCES `social_media` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_SOCIAL_MEDIA_SHARE_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_SOCIAL_MEDIA_SHARE_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`product_id`) REFERENCES `product_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `log_viewed_product` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID',
    `customer_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer ID',
    `product_id` INTEGER UNSIGNED NOT NULL COMMENT 'Product ID',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated at',
    PRIMARY KEY (`id`),
    INDEX IDX_LOG_VIEW_CUSTOMER_ID (`customer_id`),
    INDEX IDX_LOG_VIEW_PRODUCT_ID (`product_id`),
    CONSTRAINT UNQ_LOG_VIEWED_PRODUCT_CUSTOMER_ID_PRODUCT_ID UNIQUE (`customer_id`,`product_id`),
    CONSTRAINT FK_LOG_VIEWED_PRODUCT_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_LOG_VIEWED_PRODUCT_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`product_id`) REFERENCES `product_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `retailer`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Retailer ID',
    `customer_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer ID',
    `store_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Store ID',
    `address` TEXT COMMENT 'Address',
    `tel` VARCHAR(20) DEFAULT NULL COMMENT 'Telephone',
    `uri_key` VARCHAR(50) NOT NULL COMMENT 'uri_key',
    `contact` TEXT COMMENT 'Contact Infomation',
    `description` TEXT COMMENT 'Description',
    `keywords` TEXT COMMENT 'Keywords',
    `profile` MEDIUMBLOB NULL DEFAULT NULL COMMENT 'Profile',
    `watermark` MEDIUMBLOB NULL DEFAULT NULL COMMENT 'Watermark',
    `banner` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Banner',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    PRIMARY KEY (`id`),
    INDEX IDX_RETAILER_BANNER (`banner`),
    CONSTRAINT UNQ_RETAILER_URI_KEY UNIQUE (`uri_key`),
    CONSTRAINT UNQ_RETAILER_CUSTOMER_ID UNIQUE (`customer_id`),
    CONSTRAINT UNQ_RETAILER_STORE_ID UNIQUE (`store_id`),
    CONSTRAINT FK_RETAILER_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_RETAILER_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_RETAILER_BANNER_RESOURCE_ID FOREIGN KEY (`banner`) REFERENCES `resource` (`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `retailer_application`(
    `customer_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer ID',
    `lisence_1` MEDIUMBLOB COMMENT 'Lisence 1',
    `lisence_2` MEDIUMBLOB COMMENT 'Lisence 2',
    `phone` VARCHAR(20) NOT NULL COMMENT 'Phone',
    `brand_type` BOOLEAN NOT NULL COMMENT 'Brand type',
    `product_type` VARCHAR(255) NOT NULL COMMENT 'Product type',
    `status` BOOLEAN DEFAULT 0 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    PRIMARY KEY (`customer_id`),
    CONSTRAINT FK_RETAILER_APPLICATION_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `persistent`(
    `customer_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer ID',
    `key` CHAR(32) NOT NULL COMMENT 'Cookie Key',
    `updated_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Created at',
    PRIMARY KEY (`customer_id`),
    INDEX IDX_PERSISTENT_CUSTOMER_ID (`customer_id`),
    CONSTRAINT UNQ_PERSISTENT_KEY UNIQUE (`key`),
    CONSTRAINT FK_PERSISTENT_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `rma` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'RMA ID',
    `order_id` INTEGER UNSIGNED NOT NULL COMMENT 'Order ID',
    `customer_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Customer ID',
    `carrier` VARCHAR(255) NULL DEFAULT NULL COMMENT 'Carrier name',
    `track_number` VARCHAR(255) NULL DEFAULT NULL COMMENT 'Track number',
    `comment` TEXT COMMENT 'Comment',
    `status` BOOLEAN NULL DEFAULT 0 COMMENT 'Status',
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated at',
    PRIMARY KEY (`id`),
    INDEX IDX_RMA_ORDER_ID (`order_id`),
    INDEX IDX_RMA_CUSTOMER_ID (`customer_id`),
    CONSTRAINT FK_RMA_ORDER_ID_SALES_ORDER_ID FOREIGN KEY (`order_id`) REFERENCES `sales_order` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_RMA_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `promotion`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Promotion ID',
    `name` VARCHAR(255) NOT NULL COMMENT 'Promotion name',
    `description` TEXT COMMENT 'Promotion description',
    `use_coupon` BOOLEAN NOT NULL DEFAULT 0 COMMENT 'Use coupon',
    `from_date` TIMESTAMP NULL DEFAULT NULL COMMENT 'From date',
    `to_date` TIMESTAMP NULL DEFAULT NULL COMMENT 'To date',
    `qty` DECIMAL(12,4) DEFAULT 0 COMMENT 'Quentity',
    `price` DECIMAL(12,4) NOT NULL DEFAULT 0 COMMENT 'Price',
    `is_fixed` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Is fixed',
    `per_item` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Per item',
    `free_shipping` BOOLEAN NOT NULL DEFAULT 0 COMMENT 'Free shipping',
    `apply_to` BOOLEAN NOT NULL DEFAULT 0 COMMENT 'Apply to item or whole cart',
    `stop_processing` BOOLEAN DEFAULT 0 COMMENT 'Stop processing more rules',
    `status` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Status',
    `sort_order` INTEGER NOT NULL DEFAULT 0 COMMENT 'Sort Order',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated at',
    PRIMARY KEY (`id`),
    INDEX IDX_PROMOTION_SORT_ORDER (`sort_order`)
);

CREATE TABLE IF NOT EXISTS `promotion_in_store`(
    `promotion_id` INTEGER UNSIGNED NOT NULL COMMENT 'Promotion ID',
    `store_id` INTEGER UNSIGNED NOT NULL COMMENT 'Store ID',
    PRIMARY KEY (`promotion_id`,`store_id`),
    INDEX IDX_PROMOTION_STORE_ID (`store_id`),
    CONSTRAINT FK_PROMOTION_IN_STORE_PROMOTION_ID_PROMOTION_ID FOREIGN KEY (`promotion_id`) REFERENCES `promotion` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PROMOTION_IN_STORE_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `promotion_condition`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Condition ID',
    `promotion_id` INTEGER UNSIGNED NOT NULL COMMENT 'Promotion ID',
    `parent_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Parent ID',
    `identifier` VARCHAR(50) NOT NULL COMMENT 'Identifier',
    `operator` VARCHAR(20) NOT NULL COMMENT 'Operator',
    `value` VARCHAR(255) NULL DEFAULT NULL COMMENT 'Value',
    PRIMARY KEY (`id`),
    INDEX IDX_PROMOTION_CONDITION_PROMOTION_ID (`promotion_id`),
    INDEX IDX_PROMOTION_CONDITION_PARENT_ID (`parent_id`),
    CONSTRAINT FK_PROMOTION_CONDITION_PROMOTION_ID_PROMOTION_ID FOREIGN KEY (`promotion_id`) REFERENCES `promotion` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PROMOTION_CONDITION_PARENT_ID_PROMOTION_CONDITION_ID FOREIGN KEY (`parent_id`) REFERENCES `promotion_condition` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `promotion_handler`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Handler ID',
    `promotion_id` INTEGER UNSIGNED NOT NULL COMMENT 'Promotion ID',
    `parent_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Parent ID',
    `identifier` VARCHAR(50) NOT NULL COMMENT 'Identifier',
    `operator` VARCHAR(20) NOT NULL COMMENT 'Operator',
    `value` VARCHAR(255) NULL DEFAULT NULL COMMENT 'Value',
    PRIMARY KEY (`id`),
    INDEX IDX_HANDLER_CONDITION_PROMOTION_ID (`promotion_id`),
    INDEX IDX_HANDLER_CONDITION_PARENT_ID (`parent_id`),
    CONSTRAINT FK_HANDLER_CONDITION_PROMOTION_ID_PROMOTION_ID FOREIGN KEY (`promotion_id`) REFERENCES `promotion` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_HANDLER_CONDITION_PARENT_ID_PROMOTION_HANDLER_ID FOREIGN KEY (`parent_id`) REFERENCES `promotion_handler` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `promotion_coupon`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Coupon ID',
    `code` VARCHAR(50) NOT NULL COMMENT 'Coupon code',
    `promotion_id` INTEGER UNSIGNED NOT NULL COMMENT 'Promotion ID',
    `uses_per_coupon` INTEGER UNSIGNED NOT NULL DEFAULT 0 COMMENT 'Uses per coupon',
    `uses_per_customer` INTEGER UNSIGNED NOT NULL DEFAULT 1 COMMENT 'Uses per customer',
    `status` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    `expired_at` TIMESTAMP NULL DEFAULT NULL COMMENT 'Expired at',
    PRIMARY KEY (`id`),
    INDEX IDX_PROMOTION_COUPON_PROMOTION_ID (`promotion_id`),
    INDEX IDX_PROMOTION_COUPON_STATUS (`status`),
    CONSTRAINT UNQ_PROMOTION_COUPON_CODE UNIQUE (`code`),
    CONSTRAINT FK_PROMOTION_COUPON_PROMOTION_ID FOREIGN KEY (`promotion_id`) REFERENCES `promotion` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `promotion_coupon_apply`(
    `coupon_id` INTEGER UNSIGNED NOT NULL COMMENT 'Coupon ID',
    `customer_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer ID',
    PRIMARY KEY (`coupon_id`,`customer_id`),
    INDEX IDX_PROMOTION_COUPON_APPLY_CUSTOMER_ID (`customer_id`),
    CONSTRAINT FK_PROMOTION_COUPON_APPLY_COUPON_ID_PROMOTION_COUPON_ID FOREIGN KEY (`coupon_id`) REFERENCES `promotion_coupon` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PROMOTION_COUPON_APPLY_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `promotion_coupon_log`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Log ID',
    `coupon_id` INTEGER UNSIGNED NOT NULL COMMENT 'Coupon ID',
    `order_id` INTEGER UNSIGNED NOT NULL COMMENT 'Order ID',
    `customer_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Customer ID',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    PRIMARY KEY (`id`),
    INDEX IDX_PROMOTION_COUPON_LOG_COUPON_ID (`coupon_id`),
    INDEX IDX_PROMOTION_COUPON_LOG_ORDER_ID (`order_id`),
    INDEX IDX_PROMOTION_COUPON_LOG_CUSTOMER_ID (`customer_id`),
    CONSTRAINT FK_PROMOTION_COUPON_LOG_COUPON_ID_PROMOTION_COUPON_ID FOREIGN KEY (`coupon_id`) REFERENCES `promotion_coupon` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PROMOTION_COUPON_LOG_ORDER_ID_SALES_ORDER_ID FOREIGN KEY (`order_id`) REFERENCES `sales_order` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PROMOTION_COUPON_LOG_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `reward_points`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Log ID',
    `customer_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer ID',
    `order_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Order ID',
    `count` DECIMAL(12,4) NOT NULL COMMENT 'Count',
    `comment` TEXT COMMENT 'Comment',
    `status` BOOLEAN DEFAULT 1 NOT NULL COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    PRIMARY KEY (`id`),
    INDEX IDX_REWARD_POINTS_CUSTOMER_ID (`customer_id`),
    INDEX IDX_REWARD_POINTS_ORDER_ID (`order_id`),
    CONSTRAINT FK_REWARD_POINTS_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_REWARD_POINTS_ORDER_ID_SALES_ORDER_ID FOREIGN KEY (`order_id`) REFERENCES `sales_order` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `customer_balance`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Log ID',
    `customer_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer ID',
    `amount` DECIMAL(12,4) NOT NULL COMMENT 'Count',
    `comment` TEXT COMMENT 'Comment',
    `status` BOOLEAN DEFAULT 1 NOT NULL COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    PRIMARY KEY (`id`),
    INDEX IDX_CUSTOMER_ACCOUNT_CUSTOMER_ID (`customer_id`),
    CONSTRAINT FK_CUSTOMER_ACCOUNT_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `store_decoration_template` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Template ID',
    `store_id` INTEGER UNSIGNED NOT NULL COMMENT 'Store ID',
    `stable_params` TEXT COMMENT 'Stable parameters',
    `template_name` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'Template name',
    `code_model` TEXT COMMENT 'Code model',
    `src_model` TEXT COMMENT 'Src model',
    `status` BOOLEAN DEFAULT 0 COMMENT 'Status',
    PRIMARY KEY (`id`),
    INDEX IDX_STORE_DECORATION_TEMPLATE_STORE_ID (`store_id`),
    CONSTRAINT FK_STORE_DECORATION_TEMPLATE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `store_decoration_picinfo` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Picture ID',
    `store_id` INTEGER UNSIGNED NOT NULL COMMENT 'Store ID',
    `resource_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Resource ID',
    `pic_title` VARCHAR(255) DEFAULT NULL COMMENT 'Picture title',
    `url` VARCHAR(255) DEFAULT NULL COMMENT 'Picture url',
    `resource_category_code` VARCHAR(255) NOT NULL COMMENT 'Resource category code',
    `sort_order` INTEGER DEFAULT NULL COMMENT 'Sort order',
    PRIMARY KEY (`id`),
    INDEX IDX_STORE_DECORATION_PICINFO_STORE_ID (`store_id`),
    INDEX IDX_STORE_DECORATION_PICINFO_RESOURCE_ID (`resource_id`),
    INDEX IDX_STORE_DECORATION_PICINFO_SORT_ORDER (`sort_order`),
    CONSTRAINT FK_STORE_DECORATION_PICINFO_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_STORE_DECORATION_PICINFO_RESOURCE_ID_RESOURCE_ID FOREIGN KEY (`resource_id`) REFERENCES `resource` (`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `retailer_category` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Category ID',
    `parent_id` INTEGER UNSIGNED DEFAULT NULL COMMENT 'Parent category ID',
    `store_id` INTEGER UNSIGNED NOT NULL COMMENT 'Store ID',
    `uri_key` VARCHAR(50) NOT NULL COMMENT 'Uri key',
    `default_name` VARCHAR(255) DEFAULT '' COMMENT 'Default name',
    PRIMARY KEY (`id`),
    INDEX IDX_RETAILER_CATEGORY_PARENT_ID (`parent_id`),
    CONSTRAINT UNQ_RETAILER_CATEGORY_STORE_ID_URI_KEY UNIQUE (`store_id`,`uri_key`),
    CONSTRAINT FK_RETAILER_CATEGORY_PARENT_ID_RETAILER_CATEGORY_ID FOREIGN KEY (`parent_id`) REFERENCES `retailer_category` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_RETAILER_CATEGORY_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `retailer_category_name` (
    `category_id` INTEGER UNSIGNED NOT NULL COMMENT 'Category ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `name` VARCHAR(255) DEFAULT '' COMMENT 'Name',
    PRIMARY KEY (`category_id`,`language_id`),
    INDEX IDX_RETAILER_CATEGORY_NAME_CATEGORY_ID (`category_id`),
    CONSTRAINT FK_RETAILER_CATEGORY_NAME_CATEGORY_ID_RETAILER_CATEGORY_ID FOREIGN KEY (`category_id`) REFERENCES `retailer_category` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_RETAILER_CATEGORY_NAME_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `retailer_category_with_product` (
    `category_id` INTEGER UNSIGNED NOT NULL COMMENT 'Category ID',
    `product_id` INTEGER UNSIGNED NOT NULL COMMENT 'Product ID',
    PRIMARY KEY (`category_id`,`product_id`),
    INDEX IDX_RETAILER_CAT_WITH_PRO_PRODUCT_ID (`product_id`),
    CONSTRAINT FK_RETAILER_CAT_PRO_CATEGORY_ID_CATEGORY_ENTITY_ID FOREIGN KEY (`category_id`) REFERENCES `category_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_RETAILER_CAT_PRO_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`product_id`) REFERENCES `product_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `customer_credit_card` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Card ID',
    `customer_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Customer ID',
    `name` VARCHAR(255) NOT NULL COMMENT 'Name',
    `type` VARCHAR(255) NOT NULL COMMENT 'Type',
    `number` VARCHAR(255) NOT NULL COMMENT 'Number',
    `exp_month` SMALLINT NOT NULL COMMENT 'Expired month',
    `exp_year` SMALLINT NOT NULL COMMENT 'Expired year',
    `verification` VARCHAR(10) NOT NULL COMMENT 'Verification code',
    `created_at` TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    PRIMARY KEY (`id`),
    INDEX IDX_CUSTOMER_CREDIT_CARD_CUSTOMER_ID (`customer_id`),
    CONSTRAINT CHK_CUSTOMER_CREDIT_CARD_EXP_MONTH CHECK (`exp_month` > 0 AND `exp_month` < 13),
    CONSTRAINT FK_CUSTOMER_CREDIT_CARD_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `log_payment` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'ID',
    `order_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer ID',
    `trade_id` VARCHAR(255) NOT NULL COMMENT 'Trade ID',
    `method` VARCHAR(255) NOT NULL COMMENT 'Payment method',
    `params` TEXT COMMENT 'Parameters',
    `comment` TEXT COMMENT 'Comment',
    `is_request` BOOLEAN DEFAULT 0 COMMENT 'Is request',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created at',
    `updated_at` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated at',
    PRIMARY KEY (`id`),
    INDEX IDX_LOG_PAYMENT_ORDER_ID (`order_id`),
    INDEX IDX_LOG_PAYMENT_TRADE_ID (`trade_id`),
    CONSTRAINT FK_LOG_PAYMENT_ORDER_ID_SALES_ORDER_ID FOREIGN KEY (`order_id`) REFERENCES `sales_order` (`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

SET FOREIGN_KEY_CHECKS=1;
