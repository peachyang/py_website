SET FOREIGN_KEY_CHECKS=0;

CREATE TABLE IF NOT EXISTS `core_merchant`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Merchant ID',
    `code` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'Merchant code',
    `status` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Is enabled',
    `is_default` BOOLEAN NOT NULL DEFAULT 0 COMMENT 'Is default',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    CONSTRAINT UNQ_CORE_MERCHANT_CODE UNIQUE (`code`)
);

INSERT INTO `core_merchant`(`code`,`is_default`) VALUES ('default',1);

CREATE TABLE IF NOT EXISTS `core_store`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Store ID',
    `merchant_id` INTEGER UNSIGNED NOT NULL COMMENT 'Merchant ID',
    `code` VARCHAR(20) NOT NULL DEFAULT '' COMMENT 'Store code',
    `name` VARCHAR(30) NOT NULL DEFAULT '' COMMENT 'Store name',
    `is_default` BOOLEAN NOT NULL DEFAULT 0 COMMENT 'Is default',
    `status` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Is enabled',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_CORE_STORE_MERCHANT_ID (`merchant_id`),
    CONSTRAINT UNQ_CORE_STORE_CODE UNIQUE (`code`),
    CONSTRAINT FK_CORE_STORE_MERCHANT_ID_CORE_MERCHANT_ID FOREIGN KEY (`merchant_id`) REFERENCES `core_merchant`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO `core_store`(`merchant_id`,`code`,`name`,`is_default`) VALUES (1,'default','Default',1);

CREATE TABLE IF NOT EXISTS `core_language`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Language ID',
    `merchant_id` INTEGER UNSIGNED NOT NULL COMMENT 'Merchant ID',
    `code` VARCHAR(10) NOT NULL DEFAULT '' COMMENT 'RFC 5646 language code',
    `name` VARCHAR(30) NOT NULL DEFAULT '' COMMENT 'Language name',
    `is_default` BOOLEAN NOT NULL DEFAULT 0 COMMENT 'Is default',
    `status` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Is enabled',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_CORE_LANGUAGE_MERCHANT_ID (`merchant_id`),
    CONSTRAINT UNQ_CORE_LANGUAGE_MERCHANT_ID_CODE UNIQUE (`merchant_id`,`code`),
    CONSTRAINT FK_CORE_LANGUAGE_MERCHANT_ID_CORE_MERCHANT_ID FOREIGN KEY (`merchant_id`) REFERENCES `core_merchant`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO `core_language`(`merchant_id`,`code`,`name`,`is_default`) VALUES (1,'en-US','English',1);

CREATE TABLE IF NOT EXISTS `cms_page`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Page ID',
    `store_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Store ID',
    `status` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Is enabled',
    `uri_key` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'URI Key',
    `title` VARCHAR(255) DEFAULT '' COMMENT 'Page title',
    `keywords` VARCHAR(255) DEFAULT '' COMMENT 'Meta keywords',
    `description` VARCHAR(255) DEFAULT '' COMMENT 'Meta description',
    `thumbnail` VARCHAR(255) DEFAULT '' COMMENT 'Thumbnail',
    `image` VARCHAR(255) DEFAULT '' COMMENT 'Image',
    `content` BLOB COMMENT 'Page content',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_CMS_PAGE_URI_KEY (`uri_key`),
    INDEX IDX_CMS_PAGE_STORE_ID (`store_id`),
    CONSTRAINT FK_CMS_PAGE_STORE_ID_CMS_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `cms_page_language`(
    `page_id` INTEGER UNSIGNED NOT NULL COMMENT 'Page ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    PRIMARY KEY (`page_id`,`language_id`),
    INDEX IDX_CMS_PAGE_LANGUAGE_LANGUAGE_ID (`language_id`),
    CONSTRAINT FK_CMS_PAGE_LANGUAGE_PAGE_ID_CMS_PAGE_ID FOREIGN KEY (`page_id`) REFERENCES `cms_page`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CMS_PAGE_LANGUAGE_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `cms_category`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Category ID',
    `uri_key` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'URI Key',
    `parent_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Parent Category ID',
    `show_navigation` BOOLEAN NOT NULL DEFAULT 0 COMMENT 'Is navigation shown',
    `status` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_CMS_CATEGORY_PARENT_ID (`parent_id`),
    CONSTRAINT UNQ_CMS_CATEGORY_URI_KEY UNIQUE (`uri_key`),
    CONSTRAINT FK_CMS_CATEGORY_PARENT_ID_CMS_CATEGORY_ID FOREIGN KEY (`parent_id`) REFERENCES `cms_category`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `cms_category_language`(
    `category_id` INTEGER UNSIGNED NOT NULL COMMENT 'Category ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `name` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'Category name',
    PRIMARY KEY (`category_id`,`language_id`),
    INDEX IDX_CMS_CATEGORY_LANGUAGE_LANGUAGE_ID (`language_id`),
    CONSTRAINT FK_CMS_CATEGORY_LANGUAGE_CATEGORY_ID_CMS_CATEGORY_ID FOREIGN KEY (`category_id`) REFERENCES `cms_category`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CMS_CATEGORY_LANGUAGE_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `cms_category_page`(
    `category_id` INTEGER UNSIGNED NOT NULL COMMENT 'Category ID',
    `page_id` INTEGER UNSIGNED NOT NULL COMMENT 'Page ID',
    PRIMARY KEY (`category_id`,`page_id`),
    INDEX IDX_CMS_CATEGORY_PAGE_PAGE_ID (`page_id`),
    CONSTRAINT FK_CMS_CATEGORY_PAGE_CATEGORY_ID_CMS_CATEGORY_ID FOREIGN KEY (`category_id`) REFERENCES `cms_category`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CMS_CATEGORY_PAGE_PAGE_ID_CMS_PAGE_ID FOREIGN KEY (`page_id`) REFERENCES `cms_page`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `cms_block`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Block ID',
    `store_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Store ID',
    `status` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Is enabled',
    `code` VARCHAR(255) NOT NULL DEFAULT '' COMMENT 'Identify code',
    `content` BLOB COMMENT 'Page content',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_CMS_BLOCK_STORE_ID (`store_id`),
    CONSTRAINT IDX_CMS_BLOCK_CODE UNIQUE (`code`),
    CONSTRAINT FK_CMS_BLOCK_STORE_ID_CMS_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `cms_block_language`(
    `block_id` INTEGER UNSIGNED NOT NULL COMMENT 'Block ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    PRIMARY KEY (`block_id`,`language_id`),
    INDEX IDX_CMS_BLOCK_LANGUAGE_LANGUAGE_ID (`language_id`),
    CONSTRAINT FK_CMS_BLOCK_LANGUAGE_PAGE_ID_CMS_PAGE_ID FOREIGN KEY (`block_id`) REFERENCES `cms_block`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CMS_BLOCK_LANGUAGE_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `admin_operation` (
    `id` INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Operation ID',
    `name` VARCHAR(255) NOT NULL COMMENT 'Operation name',
    `description` TEXT COMMENT 'Description',
    `is_system` BOOLEAN DEFAULT 0 COMMENT 'Is generated by system',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    CONSTRAINT UNQ_ADMIN_ROLE_NAME UNIQUE (`name`)
);

INSERT INTO `admin_operation`(`id`,`name`,`description`,`is_system`) VALUES(-1,'ALL','',1);

CREATE TABLE IF NOT EXISTS `admin_role` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Role ID',
    `status` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Is enabled',
    `name` VARCHAR(255) NOT NULL COMMENT 'Role name',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    CONSTRAINT UNQ_ADMIN_ROLE_NAME UNIQUE (`name`)
);

INSERT INTO `admin_role`(`name`) VALUES ('Administrator');

CREATE TABLE IF NOT EXISTS `admin_role_recursive`(
    `role_id` INTEGER UNSIGNED NOT NULL COMMENT 'Role ID',
    `child_id` INTEGER UNSIGNED NOT NULL COMMENT 'Child ID',
    PRIMARY KEY (`role_id`,`child_id`),
    INDEX IDX_ADMIN_ROLE_RECURSIVE_CHILD_ID (`child_id`),
    CONSTRAINT FK_ADMIN_ROLE_ROLE_ID_ADMIN_ROLE_ID FOREIGN KEY (`role_id`) REFERENCES `admin_role`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ADMIN_ROLE_CHILD_ID_ADMIN_ROLE_ID FOREIGN KEY (`child_id`) REFERENCES `admin_role`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `admin_permission` (
    `role_id` INTEGER UNSIGNED NOT NULL COMMENT 'Role ID',
    `operation_id` INTEGER NOT NULL COMMENT 'Operation ID',
    `permission` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Permission',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    PRIMARY KEY (`role_id`,`operation_id`),
    INDEX IDX_ADMIN_PERMISSION_OPERATION_ID (`operation_id`),
    CONSTRAINT FK_ADMIN_PERMISSION_ROLE_ID_ADMIN_ROLE_ID FOREIGN KEY (`role_id`) REFERENCES `admin_role`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ADMIN_PERMISSION_OPERATION_ID_ADMIN_OPERATION_ID FOREIGN KEY (`operation_id`) REFERENCES `admin_operation`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO `admin_permission`(`role_id`,`operation_id`) VALUES (1,-1);

CREATE TABLE IF NOT EXISTS `admin_user` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Admin ID',
    `role_id` INTEGER UNSIGNED NOT NULL COMMENT 'Role ID',
    `store_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Store ID',
    `status` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Is enabled',
    `username` VARCHAR(255) NOT NULL COMMENT 'Username',
    `password` CHAR(60) NOT NULL COMMENT 'Password',
    `email` VARCHAR(255) NOT NULL COMMENT 'E-Mail',
    `logdate` TIMESTAMP NULL DEFAULT NULL COMMENT 'Last login time',
    `lognum` INTEGER UNSIGNED NOT NULL DEFAULT '0' COMMENT 'Login number',
    `rp_token` CHAR(32) NULL DEFAULT NULL COMMENT 'Reset password link token',
    `rp_token_created_at` TIMESTAMP NULL DEFAULT NULL COMMENT 'Reset password link token creation date',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_ADMIN_USER_STORE_ID (`store_id`),
    INDEX IDX_ADMIN_USER_ROLE_ID (`role_id`),
    CONSTRAINT UNQ_ADMIN_USER_USERNAME UNIQUE (`username`),
    CONSTRAINT UNQ_ADMIN_USER_RP_TOKEN UNIQUE (`rp_token`),
    CONSTRAINT FK_ADMIN_USER_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_ADMIN_USER_ROLE_ID_ADMIN_ROLE_ID FOREIGN KEY (`role_id`) REFERENCES `admin_role`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO `admin_user`(`role_id`,`store_id`,`status`,`username`,`password`,`email`) VALUES (1,null,1,'admin','$2y$10$5.GIrJ/AdDHso6cx6n6/MedTlhjnPRWGMOOEJT0Cf0qoB/noLnLRS','');

CREATE TABLE IF NOT EXISTS `core_config` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Config ID',
    `merchant_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Merchant ID',
    `store_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Store ID',
    `path` VARCHAR(255) NOT NULL COMMENT 'Config path',
    `value` TEXT COMMENT 'Config value',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_CORE_CONFIG_STORE_ID (`store_id`),
    INDEX IDX_CORE_CONFIG_MERCHANT_ID (`merchant_id`),
    CONSTRAINT CHK_CORE_CONFIG_MERCHANT_ID_STORE_ID CHECK ((`merchant_id` IS NOT NULL AND `store_id` IS NULL) OR (`store_id` IS NOT NULL)),
    CONSTRAINT UNQ_CORE_CONFIG_MERCHANT_ID_STORE_ID_PATH UNIQUE (`merchant_id`,`store_id`,`path`),
    CONSTRAINT FK_CORE_CONFIG_MERCHANT_ID_CORE_MARCHANT_ID FOREIGN KEY (`merchant_id`) REFERENCES `core_merchant`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CORE_CONFIG_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO `core_config`(`merchant_id`,`store_id`,`path`,`value`) VALUES (1,null,'global/url/base_url','/'),(1,NULL,'global/url/admin_path','admin');

CREATE TABLE IF NOT EXISTS `core_session` (
    `id` CHAR(32) NOT NULL COMMENT 'Session ID',
    `data` TEXT COMMENT 'Session data',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Session created',
    PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `email_template` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Template ID',
    `code` VARCHAR(255) NOT NULL COMMENT 'Template code',
    `subject` VARCHAR(255) DEFAULT '' COMMENT 'Subject',
    `content` BLOB COMMENT 'Content',
    `css` BLOB COMMENT 'CSS',
    `status` BOOLEAN DEFAULT 1 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_EMAIL_TEMPLATE_CODE (`code`)
);

CREATE TABLE IF NOT EXISTS `email_template_language`(
    `template_id` INTEGER UNSIGNED NOT NULL COMMENT 'Template ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    PRIMARY KEY (`template_id`,`language_id`),
    INDEX IDX_EMAIL_TEMPLATE_LANGUAGE_LANGUAGE_ID (`language_id`),
    CONSTRAINT FK_EMAIL_TAMPLATE_LANGUAGE_TEMPLATE_ID_EMAIL_TAMPLATE_ID FOREIGN KEY (`template_id`) REFERENCES `email_template`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EMAIL_TAMPLATE_LANGUAGE_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `message_template` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Template ID',
    `code` VARCHAR(255) NOT NULL COMMENT 'Template code',
    `content` BLOB COMMENT 'Content',
    `status` BOOLEAN DEFAULT 1 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_MESSAGE_TEMPLATE_CODE (`code`)
);

CREATE TABLE IF NOT EXISTS `message_template_language`(
    `template_id` INTEGER UNSIGNED NOT NULL COMMENT 'Template ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    PRIMARY KEY (`template_id`,`language_id`),
    INDEX IDX_MESSAGE_TEMPLATE_LANGUAGE_LANGUAGE_ID (`language_id`),
    CONSTRAINT FK_MESSAGE_TAMPLATE_LANGUAGE_TEMPLATE_ID_MESSAGE_TAMPLATE_ID FOREIGN KEY (`template_id`) REFERENCES `message_template`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_MESSAGE_TAMPLATE_LANGUAGE_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `core_schedule`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Schedule ID',
    `code` VARCHAR(255) NOT NULL COMMENT 'Run code',
    `status` CHAR(1) NOT NULL DEFAULT '0' COMMENT 'Is job finished',
    `messages` TEXT COMMENT 'Exception',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `scheduled_at` TIMESTAMP NULL DEFAULT NULL COMMENT 'Scheduled time',
    `executed_at` TIMESTAMP NULL DEFAULT NULL COMMENT 'Executed time',
    `finished_at` TIMESTAMP NULL DEFAULT NULL COMMENT 'Finishd time',
    PRIMARY KEY (`id`),
    INDEX IDX_CORE_SCHEDULE_STATUS (`status`),
    INDEX IDX_CORE_SCHEDULE_SCHEDULED_AT (`scheduled_at`)
);

CREATE TABLE IF NOT EXISTS `i18n_translation`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Translation ID',
    `string` VARCHAR(255) NOT NULL COMMENT 'Translation string',
    `translate` VARCHAR(255) NOT NULL COMMENT 'Translate',
    `locale` VARCHAR(20) NOT NULL DEFAULT 'en-US' COMMENT 'Locale',
    `status` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_I18N_TRANSLATION_LOCALE_STATUS (`locale`,`status`),
    INDEX IDX_I18N_TRANSLATION_STRING_LOCALE_STATUS (`string`,`locale`,`status`)
);

CREATE TABLE IF NOT EXISTS `i18n_country`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Country ID',
    `iso2_code` CHAR(2) NOT NULL COMMENT 'Country iso2 code',
    `iso3_code` CHAR(3) NOT NULL COMMENT 'Country iso3 code',
    `default_name` VARCHAR(50) NOT NULL COMMENT 'Country name',
    PRIMARY KEY (`id`),
    CONSTRAINT UNQ_I18N_COUNTRY_ISO2_CODE UNIQUE (`iso2_code`),
    CONSTRAINT UNQ_I18N_COUNTRY_ISO3_CODE UNIQUE (`iso3_code`)
);

CREATE TABLE IF NOT EXISTS `i18n_country_name`(
    `country_id` INTEGER UNSIGNED NOT NULL COMMENT 'Country ID',
    `locale` VARCHAR(20) NOT NULL DEFAULT 'en-US' COMMENT 'Locale',
    `name` VARCHAR(255) NOT NULL COMMENT 'Region name',
    PRIMARY KEY (`country_id`,`locale`),
    CONSTRAINT FK_I18N_COUNTRY_NAME_COUNTRY_ID FOREIGN KEY (`country_id`) REFERENCES `i18n_country`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `i18n_region`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Region ID',
    `parent_id` INTEGER UNSIGNED NOT NULL COMMENT 'Country ID',
    `code` VARCHAR(10) NOT NULL COMMENT 'Region code',
    `default_name` VARCHAR(255) NOT NULL COMMENT 'Region default name',
    PRIMARY KEY (`id`),
    INDEX IDX_I18N_REGION_PARENT_ID (`parent_id`),
    CONSTRAINT UNQ_I18N_REGION_PARENT_ID_CODE UNIQUE (`parent_id`,`code`),
    CONSTRAINT FK_I18N_REGION_PARENT_ID FOREIGN KEY (`parent_id`) REFERENCES `i18n_country`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `i18n_region_name`(
    `region_id` INTEGER UNSIGNED NOT NULL COMMENT 'Region ID',
    `locale` VARCHAR(20) NOT NULL DEFAULT 'en-US' COMMENT 'Locale',
    `name` VARCHAR(255) NOT NULL COMMENT 'Region name',
    PRIMARY KEY (`region_id`,`locale`),
    INDEX IDX_I18N_REGION_NAME_REGION_ID (`region_id`),
    CONSTRAINT FK_I18N_REGION_NAME_REGION_ID FOREIGN KEY (`region_id`) REFERENCES `i18n_region`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `i18n_city`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'City ID',
    `parent_id` INTEGER UNSIGNED NOT NULL COMMENT 'Region ID',
    `code` VARCHAR(10) NOT NULL COMMENT 'City code',
    `default_name` VARCHAR(255) NOT NULL COMMENT 'City default name',
    PRIMARY KEY (`id`),
    INDEX IDX_I18N_CITY_PARENT_ID (`parent_id`),
    CONSTRAINT UNQ_I18N_CITY_PARENT_ID_CODE UNIQUE (`parent_id`,`code`),
    CONSTRAINT FK_I18N_CITY_PARENT_ID FOREIGN KEY (`parent_id`) REFERENCES `i18n_region`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `i18n_city_name`(
    `city_id` INTEGER UNSIGNED NOT NULL COMMENT 'City ID',
    `locale` VARCHAR(20) NOT NULL DEFAULT 'en-US' COMMENT 'Locale',
    `name` VARCHAR(255) NOT NULL COMMENT 'City name',
    PRIMARY KEY (`city_id`,`locale`),
    INDEX IDX_I18N_CITY_NAME_CITY_ID (`city_id`),
    CONSTRAINT FK_I18N_CITY_NAME_CITY_ID FOREIGN KEY (`city_id`) REFERENCES `i18n_city`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `i18n_county`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'County ID',
    `parent_id` INTEGER UNSIGNED NOT NULL COMMENT 'City ID',
    `code` VARCHAR(10) COMMENT 'County code',
    `default_name` VARCHAR(255) NOT NULL COMMENT 'County default name',
    PRIMARY KEY (`id`),
    INDEX IDX_I18N_COUNTY_PARENT_ID (`parent_id`),
    CONSTRAINT UNQ_I18N_COUNTY_PARENT_ID_CODE UNIQUE (`parent_id`,`code`),
    CONSTRAINT FK_I18N_COUNTY_PARENT_ID FOREIGN KEY (`parent_id`) REFERENCES `i18n_city`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `i18n_county_name`(
    `county_id` INTEGER UNSIGNED NOT NULL COMMENT 'County ID',
    `locale` VARCHAR(20) NOT NULL DEFAULT 'en-US' COMMENT 'Locale',
    `name` VARCHAR(255) NOT NULL COMMENT 'County name',
    PRIMARY KEY (`county_id`,`locale`),
    INDEX IDX_I18N_COUNTY_NAME_COUNTY_ID (`county_id`),
    CONSTRAINT FK_I18N_COUNTY_NAME_COUNTY_ID FOREIGN KEY (`county_id`) REFERENCES `i18n_county`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `i18n_currency`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Currency ID',
    `code` CHAR(3) NOT NULL COMMENT 'ISO 4217 currency code',
    `symbol` VARCHAR(10) NOT NULL DEFAULT '$' COMMENT 'Currency symbol',
    `rate` DECIMAL(12,6) NOT NULL DEFAULT 1 COMMENT 'Currency rate',
    `format` VARCHAR(30) NULL DEFAULT '%s%.2f' COMMENT 'Price format',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    CONSTRAINT UNQ_I18N_CURRENCY_CODE UNIQUE (`code`)
);

CREATE TABLE IF NOT EXISTS `newsletter_subscriber`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Subscriber ID',
    `email` VARCHAR(255) NOT NULL COMMENT 'Subscriber email',
    `name` VARCHAR(255) DEFAULT '' COMMENT 'Subscriber name',
    `language_id` INTEGER UNSIGNED COMMENT 'Language ID',
    `code` CHAR(32) NOT NULL DEFAULT '' COMMENT 'Confirm code',
    `status` BOOLEAN NOT NULL DEFAULT 1 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_NEWSLETTER_SUBSCRIBER_LANGUAGE_ID (`language_id`),
    CONSTRAINT UNQ_NEWSLETTER_SUBSCRIBER_EMAIL UNIQUE (`email`),
    CONSTRAINT FK_NEWSLETTER_SUBSCRIBER_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `email_queue`(
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Queue ID',
    `template_id` INTEGER UNSIGNED COMMENT 'Template ID',
    `from` VARCHAR(255) NOT NULL COMMENT 'Mail from',
    `to` VARCHAR(255) NOT NULL COMMENT 'Rcpt to',
    `status` BOOLEAN NOT NULL DEFAULT 0 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `scheduled_at` TIMESTAMP NULL DEFAULT NULL COMMENT 'Scheduled time',
    `finished_at` TIMESTAMP NULL DEFAULT NULL COMMENT 'Finished time',
    PRIMARY KEY (`id`),
    INDEX IDX_EMAIL_QUEUE_TEMPLATE_ID (`template_id`),
    CONSTRAINT FK_EMAIL_QUEUE_TEMPLATE_ID_EMAIL_TAMPLATE_ID FOREIGN KEY (`template_id`) REFERENCES `email_template`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `resource_category` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Category ID',
    `store_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Store ID',
    `parent_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Parent category ID',
    `code` VARCHAR(45) NULL DEFAULT NULL COMMENT 'Category code',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_RESOURCE_CATEGORY_STORE_ID (`store_id`),
    INDEX IDX_RESOURCE_CATEGORY_PARENT_ID (`parent_id`),
    CONSTRAINT UNQ_RESOURCE_CATEGORY_CODE UNIQUE (`code`),
    CONSTRAINT FK_RESOURCE_CATEGORY_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_RESOURCE_CATEGORY_PARENT_ID_RESOURCE_CATEGORY_ID FOREIGN KEY (`parent_id`) REFERENCES `resource_category`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `resource_category_language` (
    `category_id` INTEGER UNSIGNED NOT NULL COMMENT 'Category ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `name` VARCHAR(100) NOT NULL DEFAULT '' COMMENT 'Category name',
    PRIMARY KEY (`category_id`,`language_id`),
    INDEX IDX_RESOURCE_CATEGORY_LANGUAGE_CATEGORY_ID (`category_id`),
    INDEX IDX_RESOURCE_CATEGORY_LANGUAGE_LANGUAGE_ID (`language_id`),
    CONSTRAINT FK_RESOURCE_CATEGORY_LANGUAGE_CATEGORY_ID_RESOURCE_CATEGORY_ID FOREIGN KEY (`category_id`) REFERENCES `resource_category` (`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_RESOURCE_CATEGORY_LANGUAGE_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `resource` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Resource ID',
    `store_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Store ID',
    `category_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Category ID',
    `real_name` VARCHAR(120) NOT NULL COMMENT 'Real files name',
    `uploaded_name` VARCHAR(120) DEFAULT '' COMMENT 'Uploaded files name',
    `file_type` VARCHAR(20) DEFAULT '' COMMENT 'File MIME',
    `md5` CHAR(32) NULL DEFAULT NULL COMMENT 'Resrouce md5 hash value',
    `size` INTEGER UNSIGNED DEFAULT 0 COMMENT 'File size',
    `sort_order` INTEGER DEFAULT 0 COMMENT 'Sort order',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_RESOURCE_STORE_ID (`store_id`),
    INDEX IDX_RESOURCE_CATEGORY_ID (`category_id`),
    INDEX IDX_RESOURCE_MD5 (`md5`),
    INDEX IDX_RESOURCE_SORT_ORDER (`sort_order`),
    CONSTRAINT FK_RESOURCE_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE SET NULL ON UPDATE CASCADE,
    CONSTRAINT FK_RESOURCE_CATEGORY_ID_RESOURCE_CATEGORY_ID FOREIGN KEY (`category_id`) REFERENCES `resource_category`(`id`) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `eav_entity_type` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'EAV entity type ID',
    `code` VARCHAR(50) NOT NULL COMMENT 'EAV entity type code',
    `entity_table` VARCHAR(30) DEFAULT 'eav_entity' COMMENT 'EAV entity table name',
    `value_table_prefix` VARCHAR(20) DEFAULT 'eav_value' COMMENT 'EAV entity value table name prefix',
    `is_form` BOOLEAN DEFAULT 0 COMMENT 'Is form entity',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_EAV_ENTITY_TYPE_IS_FORM (`is_form`),
    CONSTRAINT UNQ_EAV_ENTITY_TYPE_CODE UNIQUE (`code`)
);

CREATE TABLE IF NOT EXISTS `eav_attribute_set` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'EAV attribute set ID',
    `type_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV entity type ID',
    `name` VARCHAR(255) DEFAULT '' COMMENT 'EAV attribute set name',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_EAV_ATTR_SET_TYPE_ID (`type_id`),
    CONSTRAINT FK_EAV_ATTR_SET_TYPE_ID_EAV_ENTITY_TYPE_ID FOREIGN KEY (`type_id`) REFERENCES `eav_entity_type`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `eav_attribute_group` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'EAV attribute group ID',
    `type_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV entity type ID',
    `name` VARCHAR(255) DEFAULT '' COMMENT 'EAV attribute set name',
    `is_hidden` BOOLEAN DEFAULT 0 COMMENT 'Is Hidden',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_EAV_ATTR_GROUP_TYPE_ID (`type_id`),
    CONSTRAINT FK_EAV_ATTR_GROUP_TYPE_ID_EAV_ENTITY_TYPE_ID FOREIGN KEY (`type_id`) REFERENCES `eav_entity_type`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `eav_attribute` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'EAV attribute ID',
    `type_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV entity type ID',
    `code` VARCHAR(255) NOT NULL COMMENT 'EAV attribute code',
    `type` VARCHAR(10) NOT NULL COMMENT 'EAV attribute type',
    `input` VARCHAR(20) NOT NULL COMMENT 'EAV attribute form element',
    `validation` VARCHAR(255) DEFAULT '' COMMENT 'EAV attribute form validation',
    `is_required` BOOLEAN DEFAULT 0 COMMENT 'Is attribute required',
    `default_value` VARCHAR(255) DEFAULT '' COMMENT 'Default value',
    `is_unique` BOOLEAN DEFAULT 0 COMMENT 'Is attribute unique',
    `source` VARCHAR(255) NULL DEFAULT NULL COMMENT 'Source model',
    `view_model` VARCHAR(255) NULL DEFAULT NULL COMMENT 'View model',
    `searchable` BOOLEAN DEFAULT 1 COMMENT 'Is attribute use 4 searching',
    `sortable` BOOLEAN DEFAULT 1 COMMENT 'Is attribute use 4 sorting',
    `filterable` BOOLEAN DEFAULT 1 COMMENT 'Is attribute use 4 filter',
    `comparable` BOOLEAN DEFAULT 0 COMMENT 'Is attribute use 4 comparison',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_EAV_ATTR_TYPE_ID (`type_id`),
    INDEX IDX_EAV_ATTR_SEARCHABLE (`searchable`),
    INDEX IDX_EAV_ATTR_SORTABLE (`sortable`),
    INDEX IDX_EAV_ATTR_FILTERABLE (`filterable`),
    INDEX IDX_EAV_ATTR_COMPARABLE (`comparable`),
    CONSTRAINT UNQ_EAV_ATTR_TYPE_ID_CODE UNIQUE (`type_id`,`code`),
    CONSTRAINT CHK_EAV_ATTR_TYPE CHECK (`type` IN ('varchar','int','decimal','text','datetime')),
    CONSTRAINT FK_EAV_ATTR_TYPE_ID_EAV_ENTITY_TYPE_ID FOREIGN KEY (`type_id`) REFERENCES `eav_entity_type`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `eav_entity_attribute` (
    `attribute_set_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute set ID',
    `attribute_group_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute group ID',
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `sort_order` INTEGER DEFAULT 0 COMMENT 'Sort order',
    PRIMARY KEY (`attribute_id`,`attribute_set_id`,`attribute_group_id`),
    INDEX IDX_EAV_ENTITY_ATTR_ATTR_GROUP_ID (`attribute_group_id`),
    INDEX IDX_EAV_ENTITY_ATTR_ATTR_ID (`attribute_id`),
    INDEX IDX_EAV_ENTITY_ATTR_SORT_ORDER (`sort_order`),
    CONSTRAINT FK_EAV_ENTITY_ATTR_ATTR_SET_ID_EAV_ATTR_SET_ID FOREIGN KEY (`attribute_set_id`) REFERENCES `eav_attribute_set`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_ENTITY_ATTR_ATTR_GROUP_ID_EAV_ATTR_GROUP_ID FOREIGN KEY (`attribute_group_id`) REFERENCES `eav_attribute_group`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_ENTITY_ATTR_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `eav_attribute_label` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `label` VARCHAR(255) DEFAULT '' COMMENT 'EAV attribute label',
    PRIMARY KEY (`attribute_id`,`language_id`),
    INDEX IDX_EAV_ATTR_LABEL_LANGUAGE_ID (`language_id`),
    CONSTRAINT FK_EAV_ATTR_LABEL_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_ATTR_LABEL_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `eav_attribute_option` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'EAV attribute option ID',
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `sort_order` INTEGER DEFAULT 0 COMMENT 'Sort order',
    PRIMARY KEY (`id`),
    INDEX IDX_EAV_ATTR_ATTR_ID (`attribute_id`),
    CONSTRAINT FK_EAV_ATTR_OPTION_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `eav_attribute_option_label` (
    `option_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute option ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `label` VARCHAR(255) DEFAULT '' COMMENT 'EAV attribute option label',
    PRIMARY KEY (`option_id`,`language_id`),
    INDEX IDX_EAV_ATTR_OPTION_LABEL_ATTR_ID (`option_id`),
    INDEX IDX_EAV_ATTR_OPTION_LABEL_LANGUAGE_ID (`language_id`),
    CONSTRAINT FK_EAV_ATTR_OPTION_LABEL_OPTION_ID_EAV_ATTR_OPTION_ID FOREIGN KEY (`option_id`) REFERENCES `eav_attribute_option`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_ATTR_OPTION_LABEL_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `eav_entity` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'EAV entity ID',
    `type_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV entity type ID',
    `attribute_set_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute set ID',
    `store_id` INTEGER UNSIGNED NOT NULL COMMENT 'Store ID',
    `increment_id` VARCHAR(255) NULL DEFAULT NULL COMMENT 'Entity increment ID',
    `status` BOOLEAN DEFAULT 1 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_EAV_ENTITY_TYPE_ID (`type_id`),
    INDEX IDX_EAV_ENTITY_ATTRIBUTE_SET_ID (`attribute_set_id`),
    INDEX IDX_EAV_ENTITY_STORE_ID (`store_id`),
    CONSTRAINT FK_EAV_ENTITY_TYPE_ID_EAV_ENTITY_TYPE_ID FOREIGN KEY (`type_id`) REFERENCES `eav_entity_type`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_ENTITY_ATTR_SET_ID_EAV_ATTR_SET_ID FOREIGN KEY (`attribute_set_id`) REFERENCES `eav_attribute_set`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_ENTITY_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `eav_value_int` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV entity ID',
    `value` INTEGER NOT NULL COMMENT 'EAV value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_EAV_VALUE_INT_LANGUAGE_ID (`language_id`),
    INDEX IDX_EAV_VALUE_INT_ENTITY_ID (`entity_id`),
    INDEX IDX_EAV_VALUE_INT_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_EAV_VALUE_INT_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_EAV_VALUE_INT_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_VALUE_INT_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_VALUE_INT_ENTITY_ID_EAV_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `eav_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `eav_value_datetime` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV entity ID',
    `value` TIMESTAMP NOT NULL COMMENT 'EAV value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_EAV_VALUE_DATETIME_LANGUAGE_ID (`language_id`),
    INDEX IDX_EAV_VALUE_DATETIME_ENTITY_ID (`entity_id`),
    INDEX IDX_EAV_VALUE_DATETIME_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_EAV_VALUE_DATETIME_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_EAV_VALUE_DATETIME_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_VALUE_DATETIME_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_VALUE_DATETIME_ENTITY_ID_EAV_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `eav_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `eav_value_decimal` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV entity ID',
    `value` DECIMAL(12,4) NOT NULL COMMENT 'EAV value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_EAV_VALUE_DECIMAL_LANGUAGE_ID (`language_id`),
    INDEX IDX_EAV_VALUE_DECIMAL_ENTITY_ID (`entity_id`),
    INDEX IDX_EAV_VALUE_DECIMAL_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_EAV_VALUE_DECIMAL_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_EAV_VALUE_DECIMAL_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_VALUE_DECIMAL_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_VALUE_DECIMAL_ENTITY_ID_EAV_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `eav_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `eav_value_varchar` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV entity ID',
    `value` VARCHAR(255) NOT NULL COMMENT 'EAV value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_EAV_VALUE_VARCHAR_LANGUAGE_ID (`language_id`),
    INDEX IDX_EAV_VALUE_VARCHAR_ENTITY_ID (`entity_id`),
    INDEX IDX_EAV_VALUE_VARCHAR_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_EAV_VALUE_VARCHAR_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_EAV_VALUE_VARCHAR_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_VALUE_VARCHAR_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_VALUE_VARCHAR_ENTITY_ID_EAV_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `eav_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `eav_value_text` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV entity ID',
    `value` TEXT NOT NULL COMMENT 'EAV value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_EAV_VALUE_TEXT_LANGUAGE_ID (`language_id`),
    INDEX IDX_EAV_VALUE_TEXT_ENTITY_ID (`entity_id`),
    CONSTRAINT FK_EAV_VALUE_TEXT_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_VALUE_TEXT_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_EAV_VALUE_TEXT_ENTITY_ID_EAV_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `eav_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO `eav_entity_type` VALUES (1, 'customer', 'customer_entity', 'customer_value', 0, CURRENT_TIMESTAMP, NULL);
INSERT INTO `eav_attribute_set` VALUES (1, 1, 'Default', CURRENT_TIMESTAMP, NULL);
INSERT INTO `eav_attribute_group` VALUES (1, 1, 'Account Infomation', 0, CURRENT_TIMESTAMP, NULL);
INSERT INTO `eav_attribute` VALUES 
(1,1,'username','varchar','text','',1,'',1,NULL,NULL,1,1,1,1,NULL,NULL),
(2,1,'password','varchar','password','',1,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(3,1,'email','varchar','email','',1,'',1,NULL,NULL,1,1,1,1,NULL,NULL);
INSERT INTO `eav_entity_attribute` VALUES 
(1, 1, 1, 0),
(1, 1, 2, 0),
(1, 1, 3, 0);
INSERT INTO `eav_attribute_label` VALUES
(1, 1, 'Username'),
(2, 1, 'Password'),
(3, 1, 'Email');

CREATE TABLE IF NOT EXISTS `customer_entity` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Customer ID',
    `type_id` INTEGER UNSIGNED NOT NULL DEFAULT 1 COMMENT 'EAV entity type ID',
    `attribute_set_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute set ID',
    `store_id` INTEGER UNSIGNED NOT NULL COMMENT 'Store ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `increment_id` VARCHAR(255) NULL DEFAULT NULL COMMENT 'Entity increment ID',
    `confirm_token` CHAR(32) NULL DEFAULT NULL COMMENT 'Confirming link token',
    `confirm_token_created_at` TIMESTAMP NULL DEFAULT NULL COMMENT 'Confirming link token creation date',
    `status` BOOLEAN DEFAULT 1 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_CUSTOMER_ENTITY_TYPE_ID (`type_id`),
    INDEX IDX_CUSTOMER_ENTITY_ATTRIBUTE_SET_ID (`attribute_set_id`),
    INDEX IDX_CUSTOMER_ENTITY_STORE_ID (`store_id`),
    CONSTRAINT UNQ_CUSTOMER_ENTITY_CONFIRM_TOKEN UNIQUE (`confirm_token`),
    CONSTRAINT FK_CUSTOMER_ENTITY_TYPE_ID_EAV_ENTITY_TYPE_ID FOREIGN KEY (`type_id`) REFERENCES `eav_entity_type`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CUSTOMER_ENTITY_ATTR_SET_ID_EAV_ATTR_SET_ID FOREIGN KEY (`attribute_set_id`) REFERENCES `eav_attribute_set`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CUSTOMER_ENTITY_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `customer_value_int` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer entity ID',
    `value` INTEGER NOT NULL COMMENT 'Customer value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_CUSTOMER_VALUE_INT_LANGUAGE_ID (`language_id`),
    INDEX IDX_CUSTOMER_VALUE_INT_ENTITY_ID (`entity_id`),
    INDEX IDX_CUSTOMER_VALUE_INT_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_CUSTOMER_VALUE_INT_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_CUSTOMER_VALUE_INT_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CUSTOMER_VALUE_INT_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CUSTOMER_VALUE_INT_ENTITY_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `customer_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `customer_value_datetime` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer entity ID',
    `value` TIMESTAMP NOT NULL COMMENT 'Customer value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_CUSTOMER_VALUE_DATETIME_LANGUAGE_ID (`language_id`),
    INDEX IDX_CUSTOMER_VALUE_DATETIME_ENTITY_ID (`entity_id`),
    INDEX IDX_CUSTOMER_VALUE_DATETIME_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_CUSTOMER_VALUE_DATETIME_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_CUSTOMER_VALUE_DATETIME_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CUSTOMER_VALUE_DATETIME_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CUSTOMER_VALUE_DATETIME_ENTITY_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `customer_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `customer_value_decimal` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer entity ID',
    `value` DECIMAL(12,4) NOT NULL COMMENT 'Customer value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_CUSTOMER_VALUE_DECIMAL_LANGUAGE_ID (`language_id`),
    INDEX IDX_CUSTOMER_VALUE_DECIMAL_ENTITY_ID (`entity_id`),
    INDEX IDX_CUSTOMER_VALUE_DECIMAL_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_CUSTOMER_VALUE_DECIMAL_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_CUSTOMER_VALUE_DECIMAL_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CUSTOMER_VALUE_DECIMAL_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CUSTOMER_VALUE_DECIMAL_ENTITY_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `customer_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `customer_value_varchar` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer entity ID',
    `value` VARCHAR(255) NOT NULL COMMENT 'Customer value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_CUSTOMER_VALUE_VARCHAR_LANGUAGE_ID (`language_id`),
    INDEX IDX_CUSTOMER_VALUE_VARCHAR_ENTITY_ID (`entity_id`),
    INDEX IDX_CUSTOMER_VALUE_VARCHAR_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_CUSTOMER_VALUE_VARCHAR_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_CUSTOMER_VALUE_VARCHAR_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CUSTOMER_VALUE_VARCHAR_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CUSTOMER_VALUE_VARCHAR_ENTITY_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `customer_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `customer_value_text` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer entity ID',
    `value` TEXT NOT NULL COMMENT 'Customer value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_CUSTOMER_VALUE_TEXT_LANGUAGE_ID (`language_id`),
    INDEX IDX_CUSTOMER_VALUE_TEXT_ENTITY_ID (`entity_id`),
    CONSTRAINT FK_CUSTOMER_VALUE_TEXT_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CUSTOMER_VALUE_TEXT_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CUSTOMER_VALUE_TEXT_ENTITY_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `customer_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `customer_group` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Customer group ID',
    `name` VARCHAR(50) DEFAULT '' COMMENT 'Customer group name',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`)
);

INSERT INTO `customer_group` VALUES (NULL,'Default',NULL,NULL);

CREATE TABLE IF NOT EXISTS `customer_in_group` (
    `group_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer group ID',
    `customer_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer ID',
    PRIMARY KEY (`group_id`,`customer_id`),
    INDEX IDX_CUSTOMER_IN_GROUP_CUSTOMER_ID (`customer_id`),
    CONSTRAINT FK_CUSTOMER_IN_GROUP_GROUP_ID_CUSTOMER_GROUP_ID FOREIGN KEY (`group_id`) REFERENCES `customer_group`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CUSTOMER_IN_GROUP_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
); 

CREATE TABLE IF NOT EXISTS `customer_level` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Customer level ID',
    `level` INTEGER NOT NULL DEFAULT 0 COMMENT 'Customer level',
    `amount` DECIMAL(12,4) NOT NULL DEFAULT 0 COMMENT 'Amount',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_CUSTOMER_LEVEL_AMOUNT (`amount`),
    CONSTRAINT UNQ_CUSTOMER_LEVEL_LEVEL UNIQUE (`level`)
);

CREATE TABLE IF NOT EXISTS `customer_level_language` (
    `level_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer level ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `name` VARCHAR(50) DEFAULT '' COMMENT 'Customer level name',
    PRIMARY KEY (`level_id`,`language_id`),
    INDEX IDX_CUSTOMER_LEVEL_LANGUAGE_ID (`language_id`),
    CONSTRAINT FK_CUSTOMER_LEVEL_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `oauth_client` (
    `customer_id` INTEGER UNSIGNED NOT NULL COMMENT 'Customer ID',
    `oauth_server` VARCHAR(255) NOT NULL COMMENT 'OAuth server name',
    `open_id` VARCHAR(255) NOT NULL COMMENT 'Open ID',
    PRIMARY KEY (`oauth_server`,`customer_id`),
    CONSTRAINT `UNQ_OAUTH_CLIENT_OAUTH_SERVER_OPEN_ID` UNIQUE(`oauth_server`,`open_id`)
);

CREATE TABLE IF NOT EXISTS `api_rest_role` (
    `id` INTEGER NOT NULL AUTO_INCREMENT COMMENT 'Role ID',
    `name` VARCHAR(255) DEFAULT '' COMMENT 'Role name',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`)
);

INSERT INTO `api_rest_role` VALUES (-1,'Admin',NULL,NULL),(NULL,'Anonymous',NULL,NULL),(NULL,'Customer',NULL,NULL);

CREATE TABLE IF NOT EXISTS `api_rest_attribute` (
    `role_id` INTEGER NOT NULL COMMENT 'Role ID',
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'Attribute ID',
    `writeable` BOOLEAN DEFAULT 0 COMMENT 'Is writeable',
    `readable` BOOLEAN DEFAULT 0 COMMENT 'Is readable',
    PRIMARY KEY (`role_id`,`attribute_id`),
    INDEX IDX_API_REST_ATTR_ATTR_ID (`attribute_id`),
    CONSTRAINT FK_API_REST_ATTR_API_REST_ROLE FOREIGN KEY (`role_id`) REFERENCES `api_rest_role`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_API_REST_ATTR_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `oauth_consumer` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Consumer ID',
    `name` VARCHAR(255) DEFAULT '' COMMENT 'Consumer name',
    `role_id` INTEGER NOT NULL COMMENT 'Role ID',
    `key` CHAR(32) NOT NULL COMMENT 'Key code',
    `secret` CHAR(32) NOT NULL COMMENT 'Secret code',
    `callback_url` VARCHAR(255) NOT NULL COMMENT 'Callback Url',
    `rejected_callback_url` VARCHAR(255) DEFAULT '' COMMENT 'Rejected callback Url',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    CONSTRAINT UNQ_OAUTH_CONSUMER_KEY UNIQUE (`key`),
    CONSTRAINT UNQ_OAUTH_CONSUMER_SECRET UNIQUE (`secret`),
    CONSTRAINT FK_OAUTH_CONSUMER_API_REST_ROLE FOREIGN KEY (`role_id`) REFERENCES `api_rest_role`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `oauth_token` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Token ID',
    `consumer_id` INTEGER UNSIGNED NOT NULL COMMENT 'Consumer ID',
    `open_id` CHAR(32) NOT NULL COMMENT 'Open ID',
    `admin_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Admin ID',
    `customer_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Customer ID',
    `status` BOOLEAN DEFAULT 1 COMMENT 'Authorized',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    PRIMARY KEY (`id`),
    INDEX IDX_OAUTH_TOKEN_CONSUMER_ID (`consumer_id`),
    INDEX IDX_OAUTH_TOKEN_CUSTOMER_ID (`customer_id`),
    INDEX IDX_OAUTH_TOKEN_ADMIN_ID (`admin_id`),
    CONSTRAINT CHK_OAUTH_TOKEN_CUSTOMER_ID_ADMIN_ID CHECK ((`admin_id` IS NULL AND `customer_id` IS NOT NULL) OR (`admin_id` IS NOT NULL AND `customer_id` IS NULL)),
    CONSTRAINT UNQ_OAUTH_TOKEN_CONSUMER_ID_CUSTOMER_ID_ADMIN_ID UNIQUE (`consumer_id`,`customer_id`,`admin_id`),
    CONSTRAINT UNQ_OAUTH_TOKEN_CONSUMER_ID_ADMIN_ID_OPEN_ID UNIQUE (`consumer_id`,`admin_id`,`open_id`),
    CONSTRAINT FK_OAUTH_TOKEN_CONSUMER_ID_OAUTH_CONSUMER_ID FOREIGN KEY (`consumer_id`) REFERENCES `oauth_consumer`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_OAUTH_TOKEN_CUSTOMER_ID_ENTITY_CUSTOMER_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `api_soap_role` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Role ID',
    `name` VARCHAR(255) DEFAULT '' COMMENT 'Role name',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `api_soap_permission` (
    `role_id` INTEGER UNSIGNED NOT NULL COMMENT 'Role ID',
    `resource` VARCHAR(255) NOT NULL COMMENT 'Resource',
    `permission` BOOLEAN DEFAULT 1 COMMENT 'Permission',
    PRIMARY KEY (`role_id`,`resource`)
);

CREATE TABLE IF NOT EXISTS `api_soap_user` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'User ID',
    `role_id` INTEGER UNSIGNED NOT NULL COMMENT 'Role ID',
    `name` VARCHAR(255) DEFAULT '' COMMENT 'User name',
    `email` VARCHAR(255) DEFAULT '' COMMENT 'User email',
    `key` CHAR(32) NOT NULL COMMENT 'Api key',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_API_SOAP_USER_ROLE_ID (`role_id`),
    CONSTRAINT UNQ_API_SOAP_USER_KEY UNIQUE (`key`),
    CONSTRAINT FK_API_SOAP_USER_ROLE_ID_API_SOAP_ROLE_ID FOREIGN KEY (`role_id`) REFERENCES `api_soap_role`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO `eav_entity_type` VALUES (2, 'address', 'address_entity', 'address_value', 0, CURRENT_TIMESTAMP, NULL);
INSERT INTO `eav_attribute_set` VALUES (NULL, 2, 'Default', CURRENT_TIMESTAMP, NULL);
INSERT INTO `eav_attribute_group` VALUES (NULL, 2, 'General', 0, CURRENT_TIMESTAMP, NULL);
INSERT INTO `eav_attribute` VALUES 
(4,2,'name','varchar','text','',1,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(5,2,'country','varchar','select','',1,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(6,2,'region','varchar','locate','',1,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(7,2,'city','varchar','locate','',1,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(8,2,'county','varchar','locate','',1,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(9,2,'address','text','text','',1,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(10,2,'postcode','varchar','tel','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(11,2,'tel','varchar','tel','',1,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(12,2,'email','varchar','email','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL);
INSERT INTO `eav_entity_attribute` VALUES 
(2, 2, 4, 0),
(2, 2, 5, 0),
(2, 2, 6, 0),
(2, 2, 7, 0),
(2, 2, 8, 0),
(2, 2, 9, 0),
(2, 2, 10, 0),
(2, 2, 11, 0),
(2, 2, 12, 0);
INSERT INTO `eav_attribute_label` VALUES
(4, 1, 'Name'),
(5, 1, 'Country'),
(6, 1, 'Region'),
(7, 1, 'City'),
(8, 1, 'County'),
(9, 1, 'Address'),
(10, 1, 'Postcode'),
(11, 1, 'Telephone'),
(12, 1, 'Email');

CREATE TABLE IF NOT EXISTS `address_entity` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Address ID',
    `type_id` INTEGER UNSIGNED NOT NULL DEFAULT 2 COMMENT 'EAV entity type ID',
    `attribute_set_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute set ID',
    `store_id` INTEGER UNSIGNED NOT NULL COMMENT 'Store ID',
    `customer_id` INTEGER UNSIGNED NULL COMMENT 'Customer ID',
    `is_default` BOOLEAN DEFAULT 0 COMMENT 'Is default address',
    `status` BOOLEAN DEFAULT 0 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_ADDRESS_ENTITY_TYPE_ID (`type_id`),
    INDEX IDX_ADDRESS_ENTITY_ATTRIBUTE_SET_ID (`attribute_set_id`),
    INDEX IDX_ADDRESS_ENTITY_CUSTOMER_ID (`customer_id`),
    CONSTRAINT FK_ADDRESS_ENTITY_TYPE_ID_EAV_ENTITY_TYPE_ID FOREIGN KEY (`type_id`) REFERENCES `eav_entity_type`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ADDRESS_ENTITY_ATTR_SET_ID_EAV_ATTR_SET_ID FOREIGN KEY (`attribute_set_id`) REFERENCES `eav_attribute_set`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ADDRESS_ENTITY_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ADDRESS_ENTITY_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `address_value_int` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Address entity ID',
    `value` INTEGER NOT NULL COMMENT 'Address value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_ADDRESS_VALUE_INT_LANGUAGE_ID (`language_id`),
    INDEX IDX_ADDRESS_VALUE_INT_ENTITY_ID (`entity_id`),
    INDEX IDX_ADDRESS_VALUE_INT_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_ADDRESS_VALUE_INT_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_ADDRESS_VALUE_INT_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ADDRESS_VALUE_INT_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ADDRESS_VALUE_INT_ENTITY_ID_ADDRESS_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `address_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `address_value_datetime` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Address entity ID',
    `value` TIMESTAMP NOT NULL COMMENT 'Address value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_ADDRESS_VALUE_DATETIME_LANGUAGE_ID (`language_id`),
    INDEX IDX_ADDRESS_VALUE_DATETIME_ENTITY_ID (`entity_id`),
    INDEX IDX_ADDRESS_VALUE_DATETIME_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_ADDRESS_VALUE_DATETIME_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_ADDRESS_VALUE_DATETIME_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ADDRESS_VALUE_DATETIME_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ADDRESS_VALUE_DATETIME_ENTITY_ID_ADDRESS_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `address_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `address_value_decimal` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Address entity ID',
    `value` DECIMAL(12,4) NOT NULL COMMENT 'Address value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_ADDRESS_VALUE_DECIMAL_LANGUAGE_ID (`language_id`),
    INDEX IDX_ADDRESS_VALUE_DECIMAL_ENTITY_ID (`entity_id`),
    INDEX IDX_ADDRESS_VALUE_DECIMAL_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_ADDRESS_VALUE_DECIMAL_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_ADDRESS_VALUE_DECIMAL_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ADDRESS_VALUE_DECIMAL_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ADDRESS_VALUE_DECIMAL_ENTITY_ID_ADDRESS_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `address_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `address_value_varchar` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Address entity ID',
    `value` VARCHAR(255) NOT NULL COMMENT 'Address value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_ADDRESS_VALUE_VARCHAR_LANGUAGE_ID (`language_id`),
    INDEX IDX_ADDRESS_VALUE_VARCHAR_ENTITY_ID (`entity_id`),
    INDEX IDX_ADDRESS_VALUE_VARCHAR_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_ADDRESS_VALUE_VARCHAR_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_ADDRESS_VALUE_VARCHAR_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ADDRESS_VALUE_VARCHAR_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ADDRESS_VALUE_VARCHAR_ENTITY_ID_ADDRESS_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `address_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `address_value_text` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Address entity ID',
    `value` TEXT NOT NULL COMMENT 'Address value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_ADDRESS_VALUE_TEXT_LANGUAGE_ID (`language_id`),
    INDEX IDX_ADDRESS_VALUE_TEXT_ENTITY_ID (`entity_id`),
    CONSTRAINT FK_ADDRESS_VALUE_TEXT_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ADDRESS_VALUE_TEXT_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_ADDRESS_VALUE_TEXT_ENTITY_ID_ADDRESS_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `address_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO `eav_entity_type` VALUES (3, 'category', 'category_entity', 'category_value', 0, CURRENT_TIMESTAMP, NULL);
INSERT INTO `eav_attribute_set` VALUES (NULL, 3, 'Default', CURRENT_TIMESTAMP, NULL);
INSERT INTO `eav_attribute_group` VALUES (NULL, 3, 'Category Infomation', 0, CURRENT_TIMESTAMP, NULL),
(NULL, 3, 'Display Settings', 0, CURRENT_TIMESTAMP, NULL);
INSERT INTO `eav_attribute` VALUES 
(13,3,'name','varchar','text','',1,'',0,NULL,NULL,0,1,0,0,NULL,NULL),
(14,3,'description','text','wysiwyg','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(15,3,'uri_key','varchar','text','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(16,3,'meta_title','varchar','text','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(17,3,'meta_description','varchar','text','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(18,3,'meta_keywords','varchar','text','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(19,3,'thumbnail','int','resource','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(20,3,'image','int','resource','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(21,3,'include_in_menu','varchar','select','',1,'1',0,'\\Seahinet\\Lib\\Source\\Yesno',NULL,0,0,0,0,NULL,NULL),
(22,3,'display_mode','varchar','select','',1,'0',0,'\\Seahinet\\Catalog\\Source\\DisplayMode',NULL,0,0,0,0,NULL,NULL),
(23,3,'block','varchar','select','',0,'',0,'\\Seahinet\\Cms\\Source\\Block',NULL,0,0,0,0,NULL,NULL),
(24,3,'sortable','varchar','multiselect','',1,'',0,'\\Seahinet\\Catalog\\Source\\Sortable',NULL,0,0,0,0,NULL,NULL),
(25,3,'default_sortable','varchar','select','',1,'',0,'\\Seahinet\\Catalog\\Source\\Sortable',NULL,0,0,0,0,NULL,NULL);
INSERT INTO `eav_entity_attribute` VALUES 
(3, 3, 13, 0),
(3, 3, 14, 0),
(3, 3, 15, 0),
(3, 3, 16, 0),
(3, 3, 17, 0),
(3, 3, 18, 0),
(3, 3, 19, 0),
(3, 3, 20, 0),
(3, 3, 21, 0),
(3, 4, 22, 0),
(3, 4, 23, 0),
(3, 4, 24, 0),
(3, 4, 25, 0);
INSERT INTO `eav_attribute_label` VALUES
(13, 1, 'Name'),
(14, 1, 'Description'),
(15, 1, 'Uri Key'),
(16, 1, 'Meta Title'),
(17, 1, 'Meta Description'),
(18, 1, 'Meta Keywords'),
(19, 1, 'Thumbnail'),
(20, 1, 'Image'),
(21, 1, 'Include in Navigation Menu'),
(22, 1, 'Display Mode'),
(23, 1, 'CMS Block'),
(24, 1, 'Available Product Listing Sort By'),
(25, 1, 'Default Product Listing Sort By');

CREATE TABLE IF NOT EXISTS `category_entity` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Category ID',
    `type_id` INTEGER UNSIGNED NOT NULL DEFAULT 3 COMMENT 'EAV entity type ID',
    `parent_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Parent entity ID',
    `attribute_set_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute set ID',
    `store_id` INTEGER UNSIGNED NOT NULL COMMENT 'Store ID',
    `sort_order` INTEGER DEFAULT 0 COMMENT 'Sort order',
    `status` BOOLEAN DEFAULT 1 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_CATEGORY_ENTITY_PARENT_ID (`parent_id`),
    INDEX IDX_CATEGORY_ENTITY_TYPE_ID (`type_id`),
    INDEX IDX_CATEGORY_ENTITY_ATTRIBUTE_SET_ID (`attribute_set_id`),
    INDEX IDX_CATEGORY_ENTITY_STORE_ID (`store_id`),
    CONSTRAINT FK_CATEGORY_ENTITY_PARENT_ID_CATEGORY_ENTITY_ID FOREIGN KEY (`parent_id`) REFERENCES `category_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CATEGORY_ENTITY_TYPE_ID_EAV_ENTITY_TYPE_ID FOREIGN KEY (`type_id`) REFERENCES `eav_entity_type`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CATEGORY_ENTITY_ATTR_SET_ID_EAV_ATTR_SET_ID FOREIGN KEY (`attribute_set_id`) REFERENCES `eav_attribute_set`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CATEGORY_ENTITY_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `category_value_int` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Category entity ID',
    `value` INTEGER NOT NULL COMMENT 'Category value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_CATEGORY_VALUE_INT_LANGUAGE_ID (`language_id`),
    INDEX IDX_CATEGORY_VALUE_INT_ENTITY_ID (`entity_id`),
    INDEX IDX_CATEGORY_VALUE_INT_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_CATEGORY_VALUE_INT_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_CATEGORY_VALUE_INT_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CATEGORY_VALUE_INT_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CATEGORY_VALUE_INT_ENTITY_ID_CATEGORY_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `category_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `category_value_datetime` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Category entity ID',
    `value` TIMESTAMP NOT NULL COMMENT 'Category value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_CATEGORY_VALUE_DATETIME_LANGUAGE_ID (`language_id`),
    INDEX IDX_CATEGORY_VALUE_DATETIME_ENTITY_ID (`entity_id`),
    INDEX IDX_CATEGORY_VALUE_DATETIME_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_CATEGORY_VALUE_DATETIME_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_CATEGORY_VALUE_DATETIME_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CATEGORY_VALUE_DATETIME_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CATEGORY_VALUE_DATETIME_ENTITY_ID_CATEGORY_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `category_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `category_value_decimal` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Category entity ID',
    `value` DECIMAL(12,4) NOT NULL COMMENT 'Category value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_CATEGORY_VALUE_DECIMAL_LANGUAGE_ID (`language_id`),
    INDEX IDX_CATEGORY_VALUE_DECIMAL_ENTITY_ID (`entity_id`),
    INDEX IDX_CATEGORY_VALUE_DECIMAL_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_CATEGORY_VALUE_DECIMAL_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_CATEGORY_VALUE_DECIMAL_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CATEGORY_VALUE_DECIMAL_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CATEGORY_VALUE_DECIMAL_ENTITY_ID_CATEGORY_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `category_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `category_value_varchar` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Category entity ID',
    `value` VARCHAR(255) NOT NULL COMMENT 'Category value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_CATEGORY_VALUE_VARCHAR_LANGUAGE_ID (`language_id`),
    INDEX IDX_CATEGORY_VALUE_VARCHAR_ENTITY_ID (`entity_id`),
    INDEX IDX_CATEGORY_VALUE_VARCHAR_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_CATEGORY_VALUE_VARCHAR_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_CATEGORY_VALUE_VARCHAR_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CATEGORY_VALUE_VARCHAR_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CATEGORY_VALUE_VARCHAR_ENTITY_ID_CATEGORY_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `category_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `category_value_text` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Category entity ID',
    `value` TEXT NOT NULL COMMENT 'Category value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_CATEGORY_VALUE_TEXT_LANGUAGE_ID (`language_id`),
    INDEX IDX_CATEGORY_VALUE_TEXT_ENTITY_ID (`entity_id`),
    CONSTRAINT FK_CATEGORY_VALUE_TEXT_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CATEGORY_VALUE_TEXT_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_CATEGORY_VALUE_TEXT_ENTITY_ID_CATEGORY_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `category_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

INSERT INTO `category_entity` VALUES (NULL,3,NULL,3,1,0,1,NULL,NULL);
INSERT INTO `category_value_varchar` VALUES (13,1,1,'Default Category',NULL);

INSERT INTO `eav_entity_type` VALUES (4, 'product', 'product_entity', 'product_value', 0, CURRENT_TIMESTAMP, NULL);
INSERT INTO `eav_attribute_set` VALUES (NULL, 4, 'Default', CURRENT_TIMESTAMP, NULL);
INSERT INTO `eav_attribute_group` VALUES (NULL, 4, 'Product Infomation', 0, CURRENT_TIMESTAMP, NULL),
(NULL, 4, 'Price', 0, CURRENT_TIMESTAMP, NULL),
(NULL, 4, 'Meta Infomation', 0, CURRENT_TIMESTAMP, NULL),
(NULL, 4, 'Images', 1, CURRENT_TIMESTAMP, NULL);
INSERT INTO `eav_attribute` VALUES 
(26,4,'name','varchar','text','',1,'',0,NULL,NULL,1,1,0,1,NULL,NULL),
(27,4,'uri_key','varchar','text','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(28,4,'description','text','wysiwyg','',1,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(29,4,'short_description','text','wysiwyg','',1,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(30,4,'sku','varchar','text','',1,'',0,NULL,NULL,1,1,0,1,NULL,NULL),
(31,4,'weight','decimal','number','',1,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(32,4,'new_start','datetime','date','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(33,4,'new_end','datetime','date','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(34,4,'price','decimal','price','',1,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(35,4,'special_price','decimal','price','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(36,4,'special_price_start','datetime','date','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(37,4,'special_price_end','datetime','date','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(38,4,'taxable','varchar','select','',0,'',0,'\\Seahinet\\Lib\\Source\\Yesno',NULL,0,0,0,0,NULL,NULL),
(39,4,'meta_title','varchar','text','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(40,4,'meta_description','text','textarea','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(41,4,'meta_keywords','text','textarea','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(42,4,'images','text','hidden','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(43,4,'default_image','int','hidden','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(44,4,'thumbnail','int','hidden','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL),
(45,4,'additional','text','hidden','',0,'',0,NULL,NULL,0,0,0,0,NULL,NULL);
INSERT INTO `eav_entity_attribute` VALUES 
(4, 5, 26, 0),
(4, 5, 27, 0),
(4, 5, 28, 0),
(4, 5, 29, 0),
(4, 5, 30, 0),
(4, 5, 31, 0),
(4, 5, 32, 0),
(4, 5, 33, 0),
(4, 6, 34, 0),
(4, 6, 35, 0),
(4, 6, 36, 0),
(4, 6, 37, 0),
(4, 6, 38, 0),
(4, 7, 39, 0),
(4, 7, 40, 0),
(4, 7, 41, 0),
(4, 8, 42, 0),
(4, 8, 43, 0),
(4, 8, 44, 0),
(4, 8, 45, 0);
INSERT INTO `eav_attribute_label` VALUES
(26, 1, 'Name'),
(27, 1, 'Uri Key'),
(28, 1, 'Description'),
(29, 1, 'Short Description'),
(30, 1, 'SKU'),
(31, 1, 'Weight'),
(32, 1, 'Set Product as New from Date'),
(33, 1, 'Set Product as New to Date'),
(34, 1, 'Price'),
(35, 1, 'Special Price'),
(36, 1, 'Special Price from Date'),
(37, 1, 'Special Price to Date'),
(38, 1, 'Taxable'),
(39, 1, 'Meta Title'),
(40, 1, 'Meta Description'),
(41, 1, 'Meta Keywords'),
(42, 1, 'Images'),
(43, 1, 'Default Image'),
(44, 1, 'Thumbnail'),
(45, 1, 'Additional');

CREATE TABLE IF NOT EXISTS `product_type` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Product type ID',
    `code` VARCHAR(20) NOT NULL COMMENT 'Product type code',
    `name` VARCHAR(255) NOT NULL COMMENT 'Product type name',
    PRIMARY KEY (`id`),
    INDEX IDX_PRODUCT_TYPE_CODE (`code`)
);

INSERT INTO `product_type` VALUES (NULL,'simple','Simple Product'),(NULL,'virtual','Virtual Product');

CREATE TABLE IF NOT EXISTS `product_entity` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Product ID',
    `type_id` INTEGER UNSIGNED NOT NULL DEFAULT 3 COMMENT 'EAV entity type ID',
    `attribute_set_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute set ID',
    `product_type_id` INTEGER UNSIGNED NOT NULL COMMENT 'Product type',
    `store_id` INTEGER UNSIGNED NOT NULL COMMENT 'Store ID',
    `status` BOOLEAN DEFAULT 1 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_PRODUCT_ENTITY_TYPE_ID (`type_id`),
    INDEX IDX_PRODUCT_ENTITY_ATTRIBUTE_SET_ID (`attribute_set_id`),
    INDEX IDX_PRODUCT_ENTITY_STORE_ID (`store_id`),
    INDEX IDX_PRODUCT_ENTITY_PRODUCT_TYPE_ID (`product_type_id`),
    CONSTRAINT FK_PRODUCT_ENTITY_PRODUCT_TYPE_ID_PRODUCT_TYPE_ID FOREIGN KEY (`product_type_id`) REFERENCES `product_type`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_ENTITY_TYPE_ID_EAV_ENTITY_TYPE_ID FOREIGN KEY (`type_id`) REFERENCES `eav_entity_type`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_ENTITY_ATTR_SET_ID_EAV_ATTR_SET_ID FOREIGN KEY (`attribute_set_id`) REFERENCES `eav_attribute_set`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_ENTITY_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `product_value_int` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Product entity ID',
    `value` INTEGER NOT NULL COMMENT 'Product value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_PRODUCT_VALUE_INT_LANGUAGE_ID (`language_id`),
    INDEX IDX_PRODUCT_VALUE_INT_ENTITY_ID (`entity_id`),
    INDEX IDX_PRODUCT_VALUE_INT_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_PRODUCT_VALUE_INT_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_PRODUCT_VALUE_INT_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_VALUE_INT_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_VALUE_INT_ENTITY_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `product_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `product_value_datetime` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Product entity ID',
    `value` TIMESTAMP NOT NULL COMMENT 'Product value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_PRODUCT_VALUE_DATETIME_LANGUAGE_ID (`language_id`),
    INDEX IDX_PRODUCT_VALUE_DATETIME_ENTITY_ID (`entity_id`),
    INDEX IDX_PRODUCT_VALUE_DATETIME_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_PRODUCT_VALUE_DATETIME_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_PRODUCT_VALUE_DATETIME_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_VALUE_DATETIME_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_VALUE_DATETIME_ENTITY_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `product_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `product_value_decimal` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Product entity ID',
    `value` DECIMAL(12,4) NOT NULL COMMENT 'Product value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_PRODUCT_VALUE_DECIMAL_LANGUAGE_ID (`language_id`),
    INDEX IDX_PRODUCT_VALUE_DECIMAL_ENTITY_ID (`entity_id`),
    INDEX IDX_PRODUCT_VALUE_DECIMAL_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_PRODUCT_VALUE_DECIMAL_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_PRODUCT_VALUE_DECIMAL_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_VALUE_DECIMAL_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_VALUE_DECIMAL_ENTITY_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `product_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `product_value_varchar` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Product entity ID',
    `value` VARCHAR(255) NOT NULL COMMENT 'Product value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_PRODUCT_VALUE_VARCHAR_LANGUAGE_ID (`language_id`),
    INDEX IDX_PRODUCT_VALUE_VARCHAR_ENTITY_ID (`entity_id`),
    INDEX IDX_PRODUCT_VALUE_VARCHAR_ATTR_ID_VALUE (`attribute_id`,`value`),
    INDEX IDX_PRODUCT_VALUE_VARCHAR_ENTITY_ID_VALUE (`entity_id`,`value`),
    CONSTRAINT FK_PRODUCT_VALUE_VARCHAR_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_VALUE_VARCHAR_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_VALUE_VARCHAR_ENTITY_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `product_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `product_value_text` (
    `attribute_id` INTEGER UNSIGNED NOT NULL COMMENT 'EAV attribute ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `entity_id` INTEGER UNSIGNED NOT NULL COMMENT 'Product entity ID',
    `value` TEXT NOT NULL COMMENT 'Product value',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`attribute_id`,`language_id`,`entity_id`),
    INDEX IDX_PRODUCT_VALUE_TEXT_LANGUAGE_ID (`language_id`),
    INDEX IDX_PRODUCT_VALUE_TEXT_ENTITY_ID (`entity_id`),
    CONSTRAINT FK_PRODUCT_VALUE_TEXT_ATTR_ID_EAV_ATTR_ID FOREIGN KEY (`attribute_id`) REFERENCES `eav_attribute`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_VALUE_TEXT_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_VALUE_TEXT_ENTITY_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`entity_id`) REFERENCES `product_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `product_option` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Product option',
    `product_id` INTEGER UNSIGNED NOT NULL COMMENT 'Product ID',
    `input` VARCHAR(11) NOT NULL COMMENT 'EAV attribute form element',
    `is_required` BOOLEAN DEFAULT 0 COMMENT 'Is attribute required',
    `sku` VARCHAR(255) DEFAULT '' COMMENT 'Product option sku',
    `price` DECIMAL(12,4) DEFAULT 0 COMMENT 'Product option price',
    `is_fixed` BOOLEAN DEFAULT 1 COMMENT 'Is price fixed or in percent',
    `sort_order` INTEGER DEFAULT 0 COMMENT 'Sort order',
    PRIMARY KEY (`id`),
    INDEX IDX_PRODUCT_OPTION_PRODUCT_ID (`product_id`),
    INDEX IDX_PRODUCT_OPTION_SORT_ORDER (`sort_order`),
    CONSTRAINT FK_PRODUCT_OPTION_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`product_id`) REFERENCES `product_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `product_option_title` (
    `option_id` INTEGER UNSIGNED NOT NULL COMMENT 'Option ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `title` VARCHAR(255) DEFAULT '' COMMENT 'Product option title',
    PRIMARY KEY (`option_id`,`language_id`),
    INDEX IDX_PRODUCT_OPTION_TITLE_LANGUAGE_ID (`language_id`),
    CONSTRAINT FK_PRODUCT_OPTION_TITLE_OPTION_ID_PRODUCT_OPTION_ID FOREIGN KEY (`option_id`) REFERENCES `product_option`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_OPTION_TITLE_OPTION_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `product_option_value` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Product option value',
    `option_id` INTEGER UNSIGNED NOT NULL COMMENT 'Option ID',
    `sku` VARCHAR(255) DEFAULT '' COMMENT 'Product option sku',
    `price` DECIMAL(12,4) DEFAULT 0 COMMENT 'Product option value price',
    `is_fixed` BOOLEAN DEFAULT 1 COMMENT 'Is price fixed or in percent',
    `sort_order` INTEGER DEFAULT 0 COMMENT 'Sort order',
    PRIMARY KEY (`id`),
    INDEX IDX_PRODUCT_OPTION_VALUE_OPTION_ID (`option_id`),
    INDEX IDX_PRODUCT_OPTION_VALUE_SORT_ORDER (`sort_order`),
    CONSTRAINT FK_PRODUCT_OPTION_VALUE_OPTION_ID_PRODUCT_OPTION_ID FOREIGN KEY (`option_id`) REFERENCES `product_option`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `product_option_value_title` (
    `value_id` INTEGER UNSIGNED NOT NULL COMMENT 'Value ID',
    `language_id` INTEGER UNSIGNED NOT NULL COMMENT 'Language ID',
    `title` VARCHAR(255) DEFAULT '' COMMENT 'Product option value title',
    PRIMARY KEY (`value_id`,`language_id`),
    INDEX IDX_PRODUCT_OPTION_VALUE_TITLE_LANGUAGE_ID (`language_id`),
    CONSTRAINT FK_PRODUCT_OPTION_VALUE_TITLE_OPTION_ID_PRODUCT_VALUE_ID FOREIGN KEY (`value_id`) REFERENCES `product_option_value`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_OPTION_VALUE_TITLE_OPTION_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `product_in_store` (
    `product_id` INTEGER UNSIGNED NOT NULL COMMENT 'Product ID',
    `store_id` INTEGER UNSIGNED NOT NULL COMMENT 'Store ID',
    PRIMARY KEY (`product_id`,`store_id`),
    INDEX IDX_PRODUCT_IN_STORE_STORE_ID (`store_id`),
    CONSTRAINT FK_PRODUCT_IN_STORE_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`product_id`) REFERENCES `product_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_IN_STORE_STORE_ID_CORE_STORE_ID FOREIGN KEY (`store_id`) REFERENCES `core_store`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `product_link` (
    `product_id` INTEGER UNSIGNED NOT NULL COMMENT 'Product ID',
    `linked_product_id` INTEGER UNSIGNED NOT NULL COMMENT 'Linked Product ID',
    `type` CHAR(1) NOT NULL COMMENT 'Link type',
    `sort_order` INTEGER DEFAULT 0 COMMENT 'Sort order',
    PRIMARY KEY (`product_id`,`linked_product_id`,`type`),
    INDEX IDX_PRODUCT_LINK_LINKED_PRODUCT_ID (`linked_product_id`),
    INDEX IDX_PRODUCT_LINK_SORT_ORDER (`sort_order`),
    CONSTRAINT FK_PRODUCT_LINK_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`product_id`) REFERENCES `product_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_LINK_LINKED_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`linked_product_id`) REFERENCES `product_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `warehouse` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Warehouse ID',
    `name` VARCHAR(255) DEFAULT '' COMMENT 'Warehouse Name',
    `country` VARCHAR(3) DEFAULT '' COMMENT 'Country ISO code',
    `region` VARCHAR(50) DEFAULT '' COMMENT 'Region name',
    `city` VARCHAR(50) DEFAULT '' COMMENT 'City name',
    `address` VARCHAR(255) DEFAULT '' COMMENT 'Address',
    `contact_info` TEXT COMMENT 'Telephone number',
    `longitude` DECIMAL(10,6) NULL DEFAULT NULL COMMENT 'Longitude',
    `latitude` DECIMAL(10,6) NULL DEFAULT NULL COMMENT 'Latitude',
    `open_at` TIME DEFAULT '00:00:00' COMMENT 'Opening time',
    `close_at` TIME DEFAULT '23:59:59' COMMENT 'Closing time',
    `status` BOOLEAN DEFAULT 1 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`id`),
    INDEX IDX_WAREHOUSE_OPEN_AT_CLOSE_AT (`open_at`,`close_at`),
    INDEX IDX_WAREHOUSE_STATUS (`status`)
);

INSERT INTO `warehouse`(`name`) VALUES ('Default');

CREATE TABLE IF NOT EXISTS `warehouse_inventory` (
    `warehouse_id` INTEGER UNSIGNED NOT NULL COMMENT 'Warehouse ID',
    `product_id` INTEGER UNSIGNED NOT NULL COMMENT 'Product ID',
    `sku` VARCHAR(255) NOT NULL COMMENT 'Product sku',
    `barcode` VARCHAR(255) DEFAULT '' COMMENT 'Product barcode',
    `qty` DECIMAL(12,4) NOT NULL COMMENT 'Quentity',
    `reserve_qty` DECIMAL(12,4) DEFAULT 0 COMMENT 'Reserve quentity',
    `min_qty` DECIMAL(12,4) DEFAULT 1 COMMENT 'Minimal quentity',
    `max_qty` DECIMAL(12,4) DEFAULT 10000 COMMENT 'Maximal quentity',
    `is_decimal` BOOLEAN DEFAULT 0 COMMENT 'Is quentity decimal',
    `backorders` BOOLEAN DEFAULT 0 COMMENT 'Is backorders allowed',
    `increment` DECIMAL(12,4) DEFAULT 1 COMMENT 'Quentity increment',
    `status` BOOLEAN DEFAULT 1 COMMENT 'Status',
    `created_at` TIMESTAMP DEFAULT CURRENT_TIMESTAMP COMMENT 'Created time',
    `updated_at` TIMESTAMP NULL DEFAULT NULL ON UPDATE CURRENT_TIMESTAMP COMMENT 'Updated time',
    PRIMARY KEY (`product_id`,`warehouse_id`,`sku`),
    INDEX IDX_WAREHOUSE_INVENTORY_WAREHOUSE_ID (`warehouse_id`),
    CONSTRAINT CHK_WAREHOUSE_INVENTORY_QTY CHECK (`qty` > 0),
    CONSTRAINT FK_WAREHOUSE_INVENTORY_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`product_id`) REFERENCES `product_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_WAREHOUSE_INVENTORY_WAREHOUSE_ID_WAREHOUSE_ID FOREIGN KEY (`warehouse_id`) REFERENCES `warehouse`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `product_in_category` (
    `product_id` INTEGER UNSIGNED NOT NULL COMMENT 'Product ID',
    `category_id` INTEGER UNSIGNED NOT NULL COMMENT 'Category ID',
    `sort_order` INTEGER DEFAULT 0 COMMENT 'Sort Order',
    PRIMARY KEY (`product_id`,`category_id`),
    INDEX IDX_PRODUCT_IN_CATEGORY_CATEGORY_ID (`category_id`),
    INDEX IDX_PRODUCT_IN_CATEGORY_SORT_ORDER (`sort_order`),
    CONSTRAINT FK_PRODUCT_IN_CATEGORY_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`product_id`) REFERENCES `product_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_PRODUCT_IN_CATEGORY_PRODUCT_ID_CATEGORY_ENTITY_ID FOREIGN KEY (`category_id`) REFERENCES `category_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `review` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Review ID',
    `product_id` INTEGER UNSIGNED NOT NULL COMMENT 'Product ID',
    `customer_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Customer ID',
    `order_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Order ID',
    `language_id` INTEGER UNSIGNED NULL DEFAULT NULL COMMENT 'Language ID',
    `subject` VARCHAR(255) NULL DEFAULT NULL COMMENT 'Review subject',
    `content` BLOB COMMENT 'Review content',
    `status` BOOLEAN DEFAULT 0 COMMENT 'Status',
    PRIMARY KEY (`id`),
    INDEX IDX_REVIEW_PRODUCT_ID (`product_id`),
    INDEX IDX_REVIEW_CUSTOMER_ID (`customer_id`),
    INDEX IDX_REVIEW_ORDER_ID (`order_id`),
    INDEX IDX_REVIEW_LANGUAGE_ID (`language_id`),
    INDEX IDX_REVIEW_STATUS (`status`),
    CONSTRAINT FK_REVIEW_PRODUCT_ID_PRODUCT_ENTITY_ID FOREIGN KEY (`product_id`) REFERENCES `product_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_REVIEW_CUSTOMER_ID_CUSTOMER_ENTITY_ID FOREIGN KEY (`customer_id`) REFERENCES `customer_entity`(`id`) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_REVIEW_LANGUAGE_ID_CORE_LANGUAGE_ID FOREIGN KEY (`language_id`) REFERENCES `core_language`(`id`) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS `rating` (
    `id` INTEGER UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Rating ID',
    `type` BOOLEAN NOT NULL COMMENT 'Rating for product or order',
    `title` VARCHAR(255) NOT NULL COMMENT 'Rating name',
    `status` BOOLEAN DEFAULT 1 COMMENT 'Status',
    PRIMARY KEY (`id`),
    INDEX IDX_RATTING_STATUS (`status`)
);

CREATE TABLE IF NOT EXISTS `review_rating` (
    `review_id` INTEGER UNSIGNED NOT NULL COMMENT 'Review ID',
    `rating_id` INTEGER UNSIGNED NOT NULL COMMENT 'Rating ID',
    `value` DECIMAL(3,1) NOT NULL COMMENT 'Rating value',
    PRIMARY KEY (`review_id`, `rating_id`)
);

SET FOREIGN_KEY_CHECKS = 1;